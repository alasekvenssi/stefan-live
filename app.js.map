{"version":3,"file":"app.js","sourceRoot":"","sources":["../../src/util/Color.ts","../../src/util/Arrays.ts","../../src/util/Math.ts","../../src/util/TransformMatrix.ts","../../src/util/Matrix2.ts","../../src/util/Vec2.ts","../../src/util/Strings.ts","../../src/util/Font.ts","../../src/graphics/Image.ts","../../src/graphics/Gradient.ts","../../src/graphics/Context2D.ts","../../src/graphics/Renderable.ts","../../src/physics/Intersections.ts","../../src/physics/Interface.ts","../../src/core/Consts.ts","../../src/core/Entity.ts","../../src/physics/Collisions.ts","../../src/physics/Simulate.ts","../../src/core/Scene.ts","../../src/util/DisjointSet.ts","../../src/core/Generator.ts","../../src/core/Breed.ts","../../src/core/Util.ts","../../src/core/Population.ts","../../src/core/Compress.ts","../../src/util/PseudoGradient.ts","../../src/core/Creature.ts","../../src/graphics/browser/WebImage.ts","../../src/graphics/browser/CanvasContext2D.ts","../../src/graphics/InteractiveContext2D.ts","../../src/graphics/browser/CanvasWindow.ts","../../src/graphics/Renderer.ts","../../src/ui/View.ts","../../src/graphics/gui/Util.ts","../../src/graphics/gui/Button.ts","../../src/graphics/gui/Text.ts","../../src/ui/SimulationView.ts","../../src/graphics/gui/Chart.ts","../../src/ui/PopulationView.ts","../../src/ui/MainView.ts","../../src/platform/browser/app.ts"],"names":[],"mappings":"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","sourcesContent":["export default class Color {\n\tconstructor(public r: number = 0, public g: number = 0, public b: number = 0, public a: number = 255) { }\n\n\tgetRGB(): string {\n\t\treturn `rgb(${this.r}, ${this.g}, ${this.b})`;\n\t}\n\n\tgetRGBA(): string {\n\t\treturn `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a / 255})`;\n\t}\n\n\ttoString(): string {\n\t\treturn this.getRGBA();\n\t}\n\n\ttoInt32(): number {\n\t\treturn this.r | (this.g << 8) | (this.b << 16) | (this.a << 24);\n\t}\n\ttoInt24(): number {\n\t\treturn this.r | (this.g << 8) | (this.b << 16);\n\t}\n\n\tisValid(): boolean {\n\t\tif (this.r < 0 || this.r > 255 || this.g < 0 || this.g > 255 || this.b < 0 || this.b > 255 || this.a < 0 || this.a > 255) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tstatic randomRGB(): Color {\n\t\treturn new Color(\n\t\t\tMath.floor(Math.random() * 255),\n\t\t\tMath.floor(Math.random() * 255),\n\t\t\tMath.floor(Math.random() * 255)\n\t\t);\n\t}\n\n\tstatic randomRGBA(): Color {\n\t\treturn new Color(\n\t\t\tMath.floor(Math.random() * 255),\n\t\t\tMath.floor(Math.random() * 255),\n\t\t\tMath.floor(Math.random() * 255),\n\t\t\tMath.floor(Math.random() * 255)\n\t\t);\n\t}\n\n\tstatic fromInt32(num: number): Color {\n\t\treturn new Color(num & 0xFF, (num >> 8) & 0xFF, (num >> 16) & 0xFF, (num >> 24) & 0xFF);\n\t}\n\tstatic fromInt24(num: number): Color {\n\t\treturn new Color(num & 0xFF, (num >> 8) & 0xFF, (num >> 16) & 0xFF);\n\t}\n\n\tstatic fromString(colorString: string): Color {\n\t\tcolorString = colorString.trim();\n\n\t\tif (colorString.length == 0) {\n\t\t\treturn Color.Transparent;\n\t\t}\n\n\t\tlet result: Color = new Color();\n\n\t\tif ((colorString.length == 7 || colorString.length == 9) && colorString[0] == '#') {\n\t\t\tlet colors: string[] = [\"\", \"\", \"\"];\n\t\t\tfor (let i: number = 0; i < 6; ++i) {\n\t\t\t\tlet colorsIdx: number = Math.floor(i / 2);\n\t\t\t\tcolors[colorsIdx] += colorString[i + 1].toUpperCase();\n\t\t\t}\n\n\t\t\tresult.r = parseInt(colors[0], 16);\n\t\t\tresult.g = parseInt(colors[1], 16);\n\t\t\tresult.b = parseInt(colors[2], 16);\n\t\t}\n\n\t\tif (colorString.length == 9 && colorString[0] == '#') {\n\t\t\tlet alpha: string = (colorString[7] + colorString[8]).toUpperCase();\n\t\t\tresult.a = parseInt(alpha, 16);\n\t\t}\n\n\t\tif (colorString[0] == '#') {\n\t\t\tif (!result.isValid()) {\n\t\t\t\tthrow `Invalid params`;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tlet temp: string = \"\";\n\t\tlet array: string[];\n\n\t\tfor (let i: number = 0; i < colorString.length; ++i) {\n\t\t\tif (!isNaN(parseInt(colorString[i], 10)) || colorString[i] == ',' || colorString[i] == '.') {\n\t\t\t\ttemp += colorString[i];\n\t\t\t}\n\t\t}\n\n\t\tarray = temp.split(',', 5);\n\t\tif (array.length != 3 && array.length != 4) {\n\t\t\tthrow `Invalid amout of ','`;\n\t\t}\n\n\t\tresult = new Color(parseInt(array[0], 10), parseInt(array[1], 10), parseInt(array[2], 10));\n\t\tif (array.length == 4) {\n\t\t\tresult.a = parseFloat(array[3]);\n\t\t}\n\n\t\tif (!result.isValid()) {\n\t\t\tthrow `Invalid params`;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic static readonly Black: Color = new Color(0, 0, 0);\n\tpublic static readonly Blue: Color = new Color(0, 0, 255);\n\tpublic static readonly Cyan: Color = new Color(0, 255, 255);\n\tpublic static readonly Green: Color = new Color(0, 255, 0);\n\tpublic static readonly Magenta: Color = new Color(255, 0, 255);\n\tpublic static readonly Red: Color = new Color(255, 0, 0);\n\tpublic static readonly Transparent: Color = new Color(0, 0, 0, 0);\n\tpublic static readonly White: Color = new Color(255, 255, 255);\n\tpublic static readonly Yellow: Color = new Color(255, 255, 0);\n}","type ForEachType<T> = (value: T, index: number, array: T[]) => void;\ntype ForEachFilterType<T> = (value: T, index: number, array: T[]) => boolean;\n\nexport function forEachInPlace<T>(array: T[], op: ForEachType<T>): T[] {\n\tarray.forEach(op);\n\treturn array;\n}\n\nexport function fillArray<T>(array: T[], begin: number, end: number, value: T): T[] {\n\tfor (let i = begin; i < end; i++) {\n\t\tarray[i] = value;\n\t}\n\treturn array;\n}\n\nexport function filterInPlace<T>(array: T[], filter: ForEachFilterType<T>): T[] {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!filter(array[i], i, array)) {\n\t\t\tarray.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n\treturn array;\n}\n\nexport function filter<T>(array: T[], filter: ForEachFilterType<T>): T[] {\n\tlet filtered = new Array<T>();\n\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (filter(array[i], i, array)) {\n\t\t\tfiltered.push(array[i]);\n\t\t}\n\t}\n\treturn filtered;\n}\n\nexport function remove<T>(array: T[], target: T): T[] {\n\treturn filterInPlace(array, (elem: T) => { return elem !== target; });\n}\n","import * as Arrays from \"./Arrays\"\n\nexport function round(x: number, precision: number = Epsilon): number {\n\tlet temp: number = 10 ** precision;\n\treturn Math.round(x * temp) / temp;\n}\n\nexport function roundForEach(array: number[]): number[] {\n\treturn Arrays.forEachInPlace(array, function (value: number, index: number, arr: number[]): void {\n\t\tarray[index] = round(value);\n\t});\n}\n\nexport function roundArray(array: number[]): number[] {\n\tlet result: number[] = array.slice();\n\treturn roundForEach(result);\n}\n\nexport function randomChance(chance: number): boolean {\n\treturn Math.random() <= chance;\n}\n\nexport function random(from: number, to: number): number { // <from, to)\n\treturn Math.random() * (to - from) + from;\n}\n\nexport function tanh(x: number): number {\n    var exp = Math.exp(2*x);\n    return x == Infinity ? 1 : x == -Infinity ? -1 : (exp - 1) / (exp + 1);\n}\n\n\n\nconst Epsilon: number = 3; // decimal place\nconst AbsError: number = 10 ** (-Epsilon);","import Matrix2 from \"./Matrix2\"\nimport * as MathUtil from \"./Math\"\nimport Vec2 from \"./Vec2\"\n\ntype CloneOperator = (y: number, x: number, InArray: number[][], OutArray: number[][]) => void;\n\nfunction defaultCloneOperator(y: number, x: number, InArray: number[][], OutArray: number[][]): void {\n\tOutArray[y][x] = InArray[y][x];\n}\n\nexport default class TransformMatrix extends Array<Array<number>> {\n\tconstructor(\n\t\tx11: number = 1, x12: number = 0, x13: number = 0,\n\t\tx21: number = 0, x22: number = 1, x23: number = 0\n\t) {\n\t\tsuper(TransformMatrix.h);\n\n\t\tfor (let y: number = 0; y < TransformMatrix.h; ++y) {\n\t\t\tthis[y] = new Array<number>(TransformMatrix.w);\n\t\t}\n\n\t\tthis[0][0] = x11;\n\t\tthis[0][1] = x12;\n\t\tthis[0][2] = x13;\n\t\tthis[1][0] = x21;\n\t\tthis[1][1] = x22;\n\t\tthis[1][2] = x23;\n\t}\n\n\tmul(rhs: TransformMatrix): TransformMatrix {\n\t\treturn new TransformMatrix(\n\t\t\tthis[0][0] * rhs[0][0] + this[0][1] * rhs[1][0],\n\t\t\tthis[0][0] * rhs[0][1] + this[0][1] * rhs[1][1],\n\t\t\tthis[0][0] * rhs[0][2] + this[0][1] * rhs[1][2] + this[0][2],\n\n\t\t\tthis[1][0] * rhs[0][0] + this[1][1] * rhs[1][0],\n\t\t\tthis[1][0] * rhs[0][1] + this[1][1] * rhs[1][1],\n\t\t\tthis[1][0] * rhs[0][2] + this[1][1] * rhs[1][2] + this[1][2]\n\t\t);\n\t}\n\n\tapply(rhs: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tthis[0][0] * rhs.x + this[0][1] * rhs.y + this[0][2],\n\t\t\tthis[1][0] * rhs.x + this[1][1] * rhs.y + this[1][2]\n\t\t);\n\t}\n\n\tset(y: number, x: number, value: number): TransformMatrix {\n\t\tif (x < 0 || x >= TransformMatrix.w || y < 0 || y >= TransformMatrix.h) {\n\t\t\tthrow 'Out of range';\n\t\t}\n\n\t\tthis[y][x] = value;\n\t\treturn this;\n\t}\n\n\tget(x: number, y: number): number {\n\t\tif (x < 0 || x >= TransformMatrix.w || y < 0 || y >= TransformMatrix.h) {\n\t\t\tthrow 'Out of range';\n\t\t}\n\n\t\treturn this[y][x];\n\t}\n\n\ttoMatrix(): Matrix2 {\n\t\tlet result: Matrix2 = new Matrix2(3, 3, 0);\n\n\t\tfor (let y: number = 0; y < TransformMatrix.h; ++y) {\n\t\t\tfor (let x: number = 0; x < TransformMatrix.w; ++x) {\n\t\t\t\tresult[y][x] = this[y][x];\n\t\t\t}\n\t\t}\n\n\t\tresult[2][2] = 1;\n\t\treturn result;\n\t}\n\n\tprint(): void {\n\t\tfor (let y: number = 0; y < TransformMatrix.h; ++y) {\n\t\t\tconsole.log(MathUtil.roundArray(this[y]));\n\t\t}\n\t\tconsole.log('-');\n\t}\n\n\tclone(op: CloneOperator = defaultCloneOperator): TransformMatrix {\n\t\tlet result: TransformMatrix = new TransformMatrix();\n\n\t\tfor (let y: number = 0; y < TransformMatrix.h; ++y) {\n\t\t\tfor (let x: number = 0; x < TransformMatrix.w; ++x) {\n\t\t\t\top(y, x, this, result);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tstatic translate(x: number, y: number): TransformMatrix {\n\t\treturn new TransformMatrix(\n\t\t\t1, 0, x,\n\t\t\t0, 1, y\n\t\t);\n\t}\n\n\tstatic scale(x: number, y: number): TransformMatrix {\n\t\treturn new TransformMatrix(\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0\n\t\t);\n\t}\n\n\tstatic rotate(angle: number): TransformMatrix {\n\t\tlet s: number = Math.sin(angle);\n\t\tlet c: number = Math.cos(angle);\n\n\t\treturn new TransformMatrix(\n\t\t\tc, -s, 0,\n\t\t\ts, c, 0\n\t\t);\n\t}\n\n\tstatic skew(xAngle: number, yAngle: number): TransformMatrix {\n\t\treturn new TransformMatrix(\n\t\t\t1, Math.tan(xAngle), 0,\n\t\t\tMath.tan(yAngle), 1, 0\n\t\t);\n\t}\n\n\tprivate static readonly w: number = 3;\n\tprivate static readonly h: number = 2;\n}","import TransformMatrix from \"./TransformMatrix\"\nimport * as MathUtil from \"./Math\"\n\ntype CloneOperator = (y: number, x: number, InArray: number[][], OutArray: number[][]) => void;\ntype ApplyOperator = (y: number, x: number, array: number[][]) => void;\n\nfunction defaultCloneOperator(y: number, x: number, InArray: number[][], OutArray: number[][]): void {\n\tOutArray[y][x] = InArray[y][x];\n}\n\nexport default class Matrix2 extends Array<Array<number>> {\n\tconstructor(private h: number = 0, private w: number = 0, value: number = 0) {\n\t\tsuper(h);\n\n\t\tfor (let y: number = 0; y < h; ++y) {\n\t\t\tthis[y] = new Array<number>(w);\n\t\t\tfor (let x: number = 0; x < w; ++x) {\n\t\t\t\tthis[y][x] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tmul(rhs: Matrix2): Matrix2 {\n\t\tif (this.getWidth() != rhs.getHeight()) {\n\t\t\tthrow `Invalid matrix multiplication`;\n\t\t}\n\n\t\tlet result: Matrix2 = Matrix2.zeros(rhs.getWidth(), this.getHeight());\n\t\tfor (let y: number = 0; y < this.getHeight(); ++y) {\n\t\t\tfor (let x: number = 0; x < rhs.getWidth(); ++x) {\n\t\t\t\tfor (let l: number = 0; l < this.getWidth(); ++l) {\n\t\t\t\t\tresult[y][x] += this[y][l] * rhs[l][x];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tclone(op: CloneOperator = defaultCloneOperator): Matrix2 {\n\t\tlet result: Matrix2 = new Matrix2(this.getHeight(), this.getWidth());\n\n\t\tfor (let y: number = 0; y < this.h; ++y) {\n\t\t\tfor (let x: number = 0; x < this.w; ++x) {\n\t\t\t\top(y, x, this, result);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tapply(op: ApplyOperator) {\n\t\tfor (let y: number = 0; y < this.h; ++y) {\n\t\t\tfor (let x: number = 0; x < this.w; ++x) {\n\t\t\t\top(y, x, this);\n\t\t\t}\n\t\t}\n\t}\n\n\ttoTransformMatrix(): TransformMatrix {\n\t\tif (this.getWidth() != 3 || this.getHeight() != 3) {\n\t\t\tthrow `Invalid matrix size`;\n\t\t} else if (this[2][0] != 0 || this[2][1] != 0) {\n\t\t\tthrow `Invalid last row`;\n\t\t} else if (this[2][2] == 0) {\n\t\t\tthrow 'Invalid scale';\n\t\t}\n\n\t\tlet result: TransformMatrix = new TransformMatrix();\n\t\tfor (let y: number = 0; y < this.h - 1; ++y) {\n\t\t\tfor (let x: number = 0; x < this.w; ++x) {\n\t\t\t\tresult[y][x] = this[y][x] / this[2][2];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tstatic eye(size: number): Matrix2 {\n\t\tlet result: Matrix2 = new Matrix2(size, size);\n\n\t\tfor (let i: number = 0; i < size; ++i) {\n\t\t\tresult[i][i] = 1;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tstatic zeros(h: number, w: number): Matrix2 {\n\t\treturn new Matrix2(h, w, 0);\n\t}\n\n\tstatic ones(h: number, w: number): Matrix2 {\n\t\treturn new Matrix2(h, w, 1);\n\t}\n\n\tfill(value: number = 0): Matrix2 {\n\t\tfor (let y: number = 0; y < this.h; ++y) {\n\t\t\tfor (let x: number = 0; x < this.w; ++x) {\n\t\t\t\tthis[y][x] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tset(y: number, x: number, value: number): Matrix2 {\n\t\tif (x < 0 || x >= this.w || y < 0 || y >= this.h) {\n\t\t\tthrow `Out of range`;\n\t\t}\n\n\t\tthis[y][x] = value;\n\t\treturn this;\n\t}\n\n\tget(x: number, y: number): number {\n\t\tif (x < 0 || x >= this.w || y < 0 || y >= this.h) {\n\t\t\tthrow `Out of range`;\n\t\t}\n\n\t\treturn this[y][x];\n\t}\n\n\tpow(exponent: number): Matrix2 {\n\t\tif (exponent < 0) {\n\t\t\tthrow `Invalid exponent`;\n\t\t} else if (exponent == 0) {\n\t\t\treturn this.getWidth() != this.getHeight() ? new Matrix2() : Matrix2.eye(this.getWidth());\n\t\t} else if (exponent == 1) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet temp: Matrix2 = this.pow(Math.floor(exponent / 2));\n\t\treturn exponent % 2 == 0 ? temp.mul(temp) : temp.mul(temp).mul(this);\n\t}\n\n\tprint(): void {\n\t\tfor (let y: number = 0; y < this.h; ++y) {\n\t\t\tconsole.log(MathUtil.roundArray(this[y]));\n\t\t}\n\t\tconsole.log('-');\n\t}\n\n\tgetTotal(): number {\n\t\treturn this.getWidth() * this.getHeight();\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.w;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.h;\n\t}\n}","import * as MathUtil from \"./Math\"\nimport Matrix2 from \"./Matrix2\"\n\nexport default class Vec2 {\n\tconstructor(public x: number = 0, public y: number = 0) { }\n\n\tadd(rhs: Vec2): Vec2 {\n\t\treturn new Vec2(this.x + rhs.x, this.y + rhs.y);\n\t}\n\n\tsub(rhs: Vec2): Vec2 {\n\t\treturn new Vec2(this.x - rhs.x, this.y - rhs.y);\n\t}\n\n\tmul(rhs: number): Vec2 {\n\t\treturn new Vec2(this.x * rhs, this.y * rhs);\n\t}\n\n\tdiv(rhs: number): Vec2 {\n\t\treturn new Vec2(this.x / rhs, this.y / rhs);\n\t}\n\n\tlength(): number;\n\tlength(l: number): this;\n\tlength(l?: number): any {\n\t\tif (l == undefined) {\n\t\t\treturn Math.sqrt(this.x ** 2 + this.y ** 2);\n\t\t} else {\n\t\t\tlet len: number = this.length();\n\t\t\tif (len == 0) {\n\t\t\t\tthrow \"Vec2 must have length for this operation\";\n\t\t\t}\n\n\t\t\treturn this.scale(l / len);\n\t\t}\n\t}\n\n\tdistance(rhs: Vec2): number {\n\t\treturn Math.sqrt((this.x - rhs.x) ** 2 + (this.y - rhs.y) ** 2);\n\t}\n\n\tsin(rhs: Vec2): number {\n\t\treturn this.cross(rhs) / this.length() / rhs.length();\n\t}\n\n\tcos(rhs: Vec2): number {\n\t\treturn this.dot(rhs) / this.length() / rhs.length();\n\t}\n\n\tprojection(rhs: Vec2): Vec2 {\n\t\treturn rhs.normal().mul(this.dot(rhs) / rhs.length());\n\t}\n\n\tdot(rhs: Vec2): number {\n\t\treturn this.x * rhs.x + this.y * rhs.y;\n\t}\n\n\tcross(rhs: Vec2): number {\n\t\treturn this.x * rhs.y - this.y * rhs.x;\n\t}\n\n\tnormal(): Vec2 {\n\t\treturn this.div(this.length());\n\t}\n\n\tprint(): void {\n\t\tconsole.log([MathUtil.round(this.x), MathUtil.round(this.y)]);\n\t\tconsole.log('-');\n\t}\n\n\ttoMatrix(): Matrix2 {\n\t\treturn new Matrix2(2, 1).set(0, 0, this.x).set(1, 0, this.y);\n\t}\n\n\tscale(s: number): this {\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\treturn this;\n\t}\n\n\tperpendicular(): Vec2[] {\n\t\treturn [\n\t\t\tnew Vec2(-this.y, this.x),\n\t\t\tnew Vec2(this.y, -this.x)\n\t\t];\n\t}\n}","// Split string and ignore empty elements\nexport function fields(str: string, separator: string): string[] {\n\treturn str.split(separator).filter(function (elem: string) {\n\t\treturn elem.length != 0;\n\t});\n}\n\nexport function startsWith(str: string, prefix: string): boolean {\n\treturn str.indexOf(prefix) == 0;\n}\n\nexport function endsWith(str: string, suffix: string): boolean {\n\treturn str.lastIndexOf(suffix) == (str.length - suffix.length);\n}\n","import * as Strings from \"./Strings\"\n\ntype FontStyle = \"normal\" | \"italic\" | \"oblique\";\ntype FontVariant = \"normal\" | \"small-caps\";\n\nexport namespace FontWeight {\n\texport let Lighter = 300;\n\texport let Normal = 400;\n\texport let Bold = 700;\n\texport let Bolder = 900;\n\n\texport function fromString(text: string): number {\n\t\tlet weight: number = parseInt(text);\n\t\tif (!isNaN(weight)) {\n\t\t\treturn weight;\n\t\t}\n\n\t\tswitch (text.toLowerCase()) {\n\t\t\tcase \"lighter\": return Lighter;\n\t\t\tcase \"normal\": return Normal;\n\t\t\tcase \"bold\": return Bold;\n\t\t\tcase \"bolder\": return Bolder;\n\t\t}\n\t\tthrow undefined;\n\t}\n}\n\nexport class Font {\n\tconstructor(public family: string = \"Arial\",\n\t\t\t\tpublic size: number = 12,\n\t\t\t\tpublic style: FontStyle = \"normal\",\n\t\t\t\tpublic weight: number = FontWeight.Normal,\n\t\t\t\tpublic variant: FontVariant = \"normal\") {}\n\n\ttoString(): string {\n\t\treturn `${this.style} ${this.weight} ${this.variant} ${this.size}px '${this.family}'`;\n\t}\n\n\t// font-style font-weight font-variant font-size font-family\n\t// italic     bold        small-caps   13px      \"Times New Roman\"\n\tstatic fromString(str: string): Font {\n\t\tlet fields = Strings.fields(str, \" \");\n\t\tlet font = new Font();\n\t\tlet state = 0;\n\n\t\tfor (let i = 0; i < fields.length; i++) {\n\t\t\tlet field = fields[i].toLowerCase();\n\n\t\t\tif (state == 0) {\n\t\t\t\tstate = 1;\n\t\t\t\tif (field == \"normal\" || field == \"italic\" || field == \"oblique\") {\n\t\t\t\t\tfont.style = <FontStyle>field;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (state == 1) {\n\t\t\t\tstate = 2;\n\t\t\t\tlet weight = FontWeight.fromString(field);\n\t\t\t\tif (weight) {\n\t\t\t\t\tfont.weight = weight;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (state == 2) {\n\t\t\t\tstate = 3;\n\t\t\t\tif (field == \"normal\" || field == \"small-caps\") {\n\t\t\t\t\tfont.variant = <FontVariant>field;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (state == 3) {\n\t\t\t\tstate = 4;\n\t\t\t\tlet size = parseInt(field);\n\t\t\t\tif (Strings.endsWith(field, \"px\") && !isNaN(size)) {\n\t\t\t\t\tfont.size = size;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfont.family = fields.slice(i).join(\" \").replace(`\"`, \"\").replace(`'`, \"\");\n\t\t}\n\t\treturn font;\n\t}\n}\n","export interface Image {\n\tisLoaded(): boolean;\n\twidth(): number;\n\theight(): number;\n}\n","import Vec2 from \"../util/Vec2\"\nimport Color from \"../util/Color\"\n\nexport class GradientColorStop {\n\tconstructor(public offset: number, public color: Color) { }\n}\n\nexport abstract class Gradient {\n\tconstructor(public stops: Array<GradientColorStop> = new Array<GradientColorStop>()) { }\n\n\tadd(offset: number, color: Color): this {\n\t\tthis.stops.push(new GradientColorStop(offset, color));\n\t\treturn this;\n\t}\n}\n\nexport class LinearGradient extends Gradient {\n\tstartPoint: Vec2;\n\tendPoint: Vec2;\n\n\tconstructor(x1: number, y1: number, x2: number, y2: number, stops?: Array<GradientColorStop>) {\n\t\tsuper(stops);\n\t\tthis.startPoint = new Vec2(x1, y1);\n\t\tthis.endPoint = new Vec2(x2, y2);\n\t}\n}\n\nexport class RadialGradient extends Gradient {\n\tstartCenter: Vec2;\n\tendCenter: Vec2;\n\n\tconstructor(\n\t\tx1: number, y1: number, public startRadius: number,\n\t\tx2: number, y2: number, public endRadius: number,\n\t\tstops?: Array<GradientColorStop>\n\t) {\n\t\tsuper(stops);\n\t\tthis.startCenter = new Vec2(x1, y1);\n\t\tthis.endCenter = new Vec2(x2, y2);\n\t}\n}\n","import Color from \"../util/Color\"\nimport Vec2 from \"../util/Vec2\"\nimport { Font } from \"../util/Font\"\nimport TransformMatrix from \"../util/TransformMatrix\"\nimport * as Strings from \"../util/Strings\"\nimport { Image } from \"./Image\"\nimport { Gradient } from \"./Gradient\"\n\nexport type LineCap = \"butt\" | \"round\" | \"square\";\nexport type LineJoin = \"miter\" | \"round\" | \"bevel\";\nexport type TextBaseline = \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\nexport enum EventType {\n\tClick, MouseDown, MouseUp, MouseMove, MouseEnter, MouseLeave\n};\n\nexport abstract class Context2D {\n\tabstract width(): number;\n\tabstract height(): number;\n\n\tabstract getPixel(x: number, y: number): Color;\n\n\tabstract clearRect(x: number, y: number, width: number, height: number): this;\n\n\tabstract drawRect(x: number, y: number, width: number, height: number, fill: boolean, stroke: boolean): this;\n\tabstract drawPath(fill: boolean, stroke: boolean): this;\n\tabstract drawText(x: number, y: number, text: string, baseline: string, fill: boolean, stroke: boolean): this;\n\n\tabstract drawImage(img: Image, x: number, y: number): this;\n\tabstract drawImage(img: Image, x: number, y: number, width: number, height: number): this;\n\tabstract drawImage(img: Image, x: number, y: number, width: number, height: number,\n\t\tsx: number, sy: number, sourceWidth: number, sourceHeight: number): this;\n\n\tabstract beginPath(startX?: number, startY?: number): this;\n\tabstract closePath(): this;\n\tabstract movePath(startX: number, startY: number): this;\n\n\tabstract pathLine(endX: number, endY: number): this;\n\tabstract pathBezier(cp1X: number, cp1Y: number, cp2X: number, cp2Y: number, endX: number, endY: number): this;\n\tabstract pathQuadratic(cpX: number, cpY: number, endX: number, endY: number): this;\n\tabstract pathArc(centerX: number, centerY: number, radius: number, startAngle: number, endAngle: number, antiClockwise?: boolean): this;\n\tabstract pathArcByControlPoints(x1: number, y1: number, x2: number, y2: number, radius: number): this;\n\n\tabstract lineWidth(): number;\n\tabstract lineWidth(val: number): this;\n\tabstract lineCap(): LineCap;\n\tabstract lineCap(val: LineCap): this;\n\tabstract lineJoin(): LineJoin;\n\tabstract lineJoin(val: LineJoin): this;\n\n\tabstract fillColor(): Color;\n\tabstract fillColor(color: Color): this;\n\tabstract strokeColor(): Color;\n\tabstract strokeColor(color: Color): this;\n\n\tabstract fillGradient(val: Gradient): this;\n\tabstract strokeGradient(val: Gradient): this;\n\n\tabstract shadowBlur(): number;\n\tabstract shadowBlur(level: number): this;\n\tabstract shadowColor(): Color;\n\tabstract shadowColor(color: Color): this;\n\tabstract shadowOffset(): Vec2;\n\tabstract shadowOffset(x: number, y: number): this;\n\n\tabstract font(): Font;\n\tabstract font(font: Font): this;\n\n\tabstract alpha(): number;\n\tabstract alpha(val: number): this;\n\n\tabstract transformMatrix(): TransformMatrix;\n\tabstract transformMatrix(val: TransformMatrix): this;\n\tabstract transform(val: TransformMatrix): this;\n\n\tabstract save(): this;\n\tabstract restore(): this;\n\n\treset(): this {\n\t\treturn this.resetTransform().clearRect(0, 0, this.width(), this.height());\n\t}\n\n\tresetTransform(): this {\n\t\treturn this.transformMatrix(new TransformMatrix());\n\t}\n\n\ttranslate(x: number, y: number): this {\n\t\treturn this.transform(TransformMatrix.translate(x, y))\n\t}\n\tscale(x: number, y: number): this {\n\t\treturn this.transform(TransformMatrix.scale(x, y))\n\t}\n\trotate(angle: number): this {\n\t\treturn this.transform(TransformMatrix.rotate(angle))\n\t}\n\tskew(x: number, y: number): this {\n\t\treturn this.transform(TransformMatrix.skew(x, y))\n\t}\n\n\tfillRGBA(r: number = 0, g: number = 0, b: number = 0, a: number = 255): this {\n\t\treturn this.fillColor(new Color(r, g, b, a));\n\t}\n\tstrokeRGBA(r: number = 0, g: number = 0, b: number = 0, a: number = 255): this {\n\t\treturn this.strokeColor(new Color(r, g, b, a));\n\t}\n\n\tdrawCircle(centerX: number, centerY: number, radius: number, fill: boolean, stroke: boolean): this {\n\t\treturn this.beginPath().pathArc(centerX, centerY, radius, 0, Math.PI * 2).drawPath(fill, stroke);\n\t}\n\n\tdrawLine(x1: number, y1: number, x2: number, y2: number, fill: boolean, stroke: boolean): this {\n\t\treturn this.beginPath(x1, y1).pathLine(x2, y2).drawPath(fill, stroke);\n\t}\n\n\tbindEvent(type: EventType, callback: (data?: any) => void): this { return this; }\n\tpopEvent(count?: number): this { return this; }\n\tcallEvent(type: EventType, x: number, y: number, data?: any): this { return this; }\n}\n","import { Context2D } from \"./Context2D\"\nimport TransformMatrix from \"../util/TransformMatrix\"\n\nexport interface Renderable {\n\trender(context: Context2D): void;\n}\n\nexport class RenderTransform implements Renderable {\n\tconstructor(public transform: TransformMatrix, public item: Renderable) { }\n\n\trender(ctx: Context2D) {\n\t\tctx.save();\n\t\tctx.transform(this.transform);\n\t\tthis.item.render(ctx);\n\t\tctx.restore();\n\t}\n}\n\nexport class RenderGroup implements Renderable {\n\titems = new Array<Renderable>();\n\n\trender(ctx: Context2D) {\n\t\tfor (let item of this.items) {\n\t\t\titem.render(ctx);\n\t\t}\n\t}\n}\n","import Vec2 from \"../util/Vec2\"\n\nexport abstract class Bounding { }\n\nexport class Circle extends Bounding {\n\tconstructor(\n\t\tpublic position: Vec2,\n\t\tpublic radius: number) {\n\t\tsuper()\n\t}\n}\n\nexport class AABB extends Bounding {\n\tconstructor(\n\t\tpublic min: Vec2,\n\t\tpublic max: Vec2) {\n\t\tsuper()\n\t}\n}\n\nexport function areIntersecting(lhs: Bounding, rhs: Bounding): boolean {\n\tif (lhs == undefined || rhs == undefined) {\n\t\treturn false;\n\t}\n\n\telse if ((lhs instanceof Circle) && (rhs instanceof Circle)) {\n\t\treturn circleVsCircle(lhs, rhs);\n\t}\n\n\telse if (lhs instanceof Circle && rhs instanceof AABB) {\n\t\treturn circleVsAABB(lhs, rhs);\n\t}\n\n\telse if (lhs instanceof AABB && rhs instanceof Circle) {\n\t\treturn circleVsAABB(rhs, lhs);\n\t}\n\n\telse if (lhs instanceof AABB && rhs instanceof AABB) {\n\t\treturn AABBVsAABB(lhs, rhs);\n\t}\n\n\telse {\n\t\tthrow \"Can't check intersections between these objects.\";\n\t}\n\n}\n\nfunction circleVsAABB(lhs: Circle, rhs: AABB): boolean {\n\tlet CircleAABB: AABB = {\n\t\tmin: lhs.position.sub(new Vec2(lhs.radius, lhs.radius)),\n\t\tmax: lhs.position.add(new Vec2(lhs.radius, lhs.radius))\n\t};\n\treturn AABBVsAABB(CircleAABB, rhs);\n}\n\nfunction circleVsCircle(lhs: Circle, rhs: Circle): boolean {\n\treturn lhs.position.distance(rhs.position) <= lhs.radius + rhs.radius;\n}\n\nfunction AABBVsAABB(lhs: AABB, rhs: AABB): boolean {\n\n\tif (lhs.max.x < rhs.min.x || lhs.min.x > rhs.max.x) {\n\t\treturn false;\n\t}\n\n\telse if (lhs.max.y < rhs.min.y || lhs.min.y > rhs.max.y) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function interpenetrationVector(lhs: Bounding, rhs: Bounding): Vec2 {\n\tif (lhs instanceof Circle && rhs instanceof AABB) {\n\t\treturn new Vec2(0, lhs.radius - lhs.position.y + rhs.max.y);\n\t}\n\tif (lhs instanceof AABB && rhs instanceof Circle) {\n\t\treturn interpenetrationVector(rhs, lhs);\n\t}\n\tif (lhs instanceof Circle && rhs instanceof Circle) {\n\t\treturn lhs.position.sub(rhs.position).normal().mul(lhs.radius + rhs.radius - lhs.position.distance(rhs.position));\n\t}\n\treturn new Vec2(0, 0);\n}\n","import Vec2 from \"../util/Vec2\";\nimport * as Intersections from \"./Intersections\";\n\nexport interface Simulable {\n\tmass: number;\n\telasticity: number;\n\tfriction: number;\n\tposition: Vec2;\n\n\tvelocity: Vec2;\n\tacceleration: Vec2;\n\n\tbounding(): Intersections.Bounding;\n\tmovable(): boolean;\n\n\taffect(physical: Simulable[]): void;\n}\n","/* ================ Mutation ================ */\nexport const MUTATION_CHANCE = 0.01;\n\nexport const MUTATION_RELATIVE_FRICTION_DIFF = 0.3;\nexport const MUTATION_BONE_FRICTION_CHANCE = 0.4;\n\nexport const MUTATION_ELASTICITY_FRICTION_DIFF = 0.3;\nexport const MUTATION_ELASTICITY_FRICTION_CHANCE = 0.4;\n\nexport const MUTATION_RELATIVE_STRENGTH_DIFF = 0.3;\nexport const MUTATION_MUSCLE_STRENGTH_CHANCE = 0.4;\nexport const MUTATION_MUSCLE_MIN_LEN_CHANCE = 0.3;\nexport const MUTATION_MUSCLE_MAX_LEN_CHANGE = 0.3;\nexport const MUTATION_MUSCLE_REALTIVE_LEN_DIFF = 0.1;\n\nexport const MUTATION_DELETE_BONE_CHANCE = 0.1;\n\nexport const MUTATION_ADD_BONE_CHANCE = 0.2;\nexport const MUTATION_CONNECTION_CHANCE = 0.66;\n\nexport const MUTATION_CHANGE_BONE_POS_CHANCE = 0.2;\nexport const MUTATION_CHANGE_BONE_POS_MIN = -20;\nexport const MUTATION_CHANGE_BONE_POS_MAX = 20;\n\n/* ================ Generator ================ */\nexport const GENERATOR_BONE_MIN_RADIUS = 25;\nexport const GENERATOR_BONE_MAX_RADIUS = 40;\n\t\nexport const GENERATOR_MUSCLE_MIN_LENGTH_DIST_FACTOR = 0.3;\nexport const GENERATOR_MUSCLE_MAX_LENGTH_DIST_FACTOR = 0.9;\nexport const GENERATOR_MUSCLE_MIN_LENGTH_CONST = 0;\nexport const GENERATOR_MUSCLE_MAX_LENGTH_CONST = 500;\nexport const GENERATOR_MUSCLE_MIN_RELATIVE_LENGTH_DIFF = 0.1;\nexport const GENERATOR_MUSCLE_MAX_RELATIVE_LENGTH_DIFF = 0.8;\n\nexport const GENERATOR_MUSCLE_MIN_STRENGTH = 10;\nexport const GENERATOR_MUSCLE_MAX_STRENGTH = 80;\n\nexport const GENERATOR_MUSCLE_MIN_INTERVAL = 0.5;\nexport const GENERATOR_MUSCLE_MAX_INTERVAL = 8;\n\nexport const GENERATOR_MUSCLE_MIN_EXPAND_FACTOR = 0.16;\nexport const GENERATOR_MUSCLE_MAX_EXPAND_FACTOR = 0.80;\n\nexport const GENERATOR_BONE_MIN_AMOUNT = 4;\nexport const GENERATOR_BONE_MAX_AMOUNT = 4;\n\n/* ================ CreatureDiff ================ */\nexport const CREATUREDIFF_BONE_ELASTICITY_DIFF_THRESHOLD = 0.1; // Jeżeli różnica elastyczności dwóch kości będzie większa niż ta zmienna to licznik punktów zwiększy się o CREATUREDIFF_BONE_DIFF_POINTS\nexport const CREATUREDIFF_BONE_FRICTION_DIFF_THRESHOLD = 0.1; // Analogicznie jak wyżej\nexport const CREATUREDIFF_BONE_MASS_DIFF_THRESHOLD = 5; // Analogicznie jak wyżej\nexport const CREATUREDIFF_BONE_POS_DIFF_THRESHOLD = 10; // Analogicznie jak wyżej\nexport const CREATUREDIFF_BONE_RADIUS_DIFF_THRESHOLD = 2; // Analogicznie jak wyżej\n\nexport const CREATUREDIFF_BONE_ELASTICITY_AVG_DIFF_THRESHOLD = 0.1; // Analogicznie jak wyżej z różnicą że chodzi o średnią arytmetyczną\nexport const CREATUREDIFF_BONE_FRICTION_AVG_DIFF_THRESHOLD = 0.1; // Analogicznie jak wyżej\nexport const CREATUREDIFF_BONE_MASS_AVG_DIFF_THRESHOLD = 5; // Analogicznie jak wyżej\nexport const CREATUREDIFF_BONE_POS_AVG_DIFF_THRESHOLD = 10; // Analogicznie jak wyżej\nexport const CREATUREDIFF_BONE_RADIUS_AVG_DIFF_THRESHOLD = 2; // Analogicznie jak wyżej\n\nexport const CREATUREDIFF_BONE_DIFF_POINTS = 1337; // Ilość punktów dodawanych do licznika\n\nexport const CREATUREDIFF_MUSCLE_EXP_FACTOR_DIFF_THRESHOLD = 0.1; // Jeżeli różnica expandFactor dwóch mięśni będzie większa niż ta zmienna to licznik punktów zwiększy się o CREATUREDIFF_MUSCLE_DIFF_POINTS\nexport const CREATUREDIFF_MUSCLE_INTERVAL_TIME_DIFF_THRESHOLD = 0.3; // Analogicznie Jak wyżej\nexport const CREATUREDIFF_MUSCLE_MAX_LEN_DIFF_THRESHOLD = 10; // Analogicznie Jak wyżej\nexport const CREATUREDIFF_MUSCLE_MIN_LEN_DIFF_THRESHOLD = 10; // Analogicznie Jak wyżej\nexport const CREATUREDIFF_MUSCLE_STR_DIFF_THRESHOLD = 5; // Analogicznie Jak wyżej\n\nexport const CREATUREDIFF_MUSCLE_EXP_FACTOR_AVG_DIFF_THRESHOLD = 0.1; // Analogicznie Jak wyżej z różnicą że chodzi o średnią arytmetyczną\nexport const CREATUREDIFF_MUSCLE_INTERVAL_TIME_AVG_DIFF_THRESHOLD = 0.3; // Analogicznie Jak wyżej\nexport const CREATUREDIFF_MUSCLE_MAX_LEN_AVG_DIFF_THRESHOLD = 10; // Analogicznie Jak wyżej\nexport const CREATUREDIFF_MUSCLE_MIN_LEN_AVG_DIFF_THRESHOLD = 10; // Analogicznie Jak wyżej\nexport const CREATUREDIFF_MUSCLE_STR_AVG_DIFF_THRESHOLD = 5; // Analogicznie Jak wyżej\n\nexport const CREATUREDIFF_MUSCLE_BONES_DIFF_POINTS = 200; // Ilość punktów dodawanych do licznika gdy dwa mięśnie łączą różne kości muscle1.bone1 != muscle2.bone1 || muscle1.bone2 != muscle2.bone2\nexport const CREATUREDIFF_MUSCLE_DIFF_POINTS = 100; // Ilość punktów dodawanych za różnicę w właściwościach mięśni, gdy mięśnie łączą te same kości\n\nexport const CREATUREDIFF_MULTIPLIER = 2000000; // Ilość karnych punktów jest liczona ze wzoru 1/(diff + 1) * CREATUREDIFF_MULTIPLIER\nexport const CREATUREDIFF_THRESHOLD = 5e5;  // Jeżeli ilość punktów będzie większa niż ta zmienna to funckja zwróci infinity\n\n/* ================ PHYSICS ================ */\nexport const ARE_BALLS_COLLIDABLE = true;\nexport const PHYSICS_GRAVITY = 981;\nexport const GROUND_ELASTICITY = 0.5;\nexport const GROUND_FRICTION = 0.5;\nexport const AIR_RESISTANCE = 0.5;\n\n/* ================ POPULATION ================ */\nexport const POPULATION_SIZE = 200;\nexport const FRACTION_OF_BREEDED_POPULATION = 0.7;\nexport const ENABLE_MASS_DESTRUCTION = true;\nexport const MASS_DESTRUCTION_FACTOR = 0.99;\nexport const MASS_DESTRUCTION_INTERVAL = 200;\nexport const HOW_MANY_COMPARISONS = 5;\nexport const COMPARE_EVERYONE_INTERVAL = 10;\nexport const NO_HOPE_VALUE = -1e4;\nexport const KILLING_CHANCE_FACTOR = 1.4;\n\n/* ================ SIMULATION ================ */\nexport const RUN_DURATION = 20;\nexport const SIMULATION_RESOLUTION = 30;\n","import Vec2 from \"../util/Vec2\"\nimport Color from \"../util/Color\"\nimport { Font, FontWeight } from \"../util/Font\"\nimport { Renderable } from \"../graphics/Renderable\"\nimport { Context2D } from \"../graphics/Context2D\"\nimport { Simulable } from \"../physics/Interface\"\nimport * as Intersections from \"../physics/Intersections\"\nimport { Image } from \"../graphics/Image\"\nimport * as Consts from \"../core/Consts\"\n\nexport abstract class Entity implements Renderable, Simulable {\n    velocity: Vec2 = new Vec2(0, 0);\n    acceleration: Vec2 = new Vec2(0, 0);\n\n    constructor(\n        public position: Vec2 = new Vec2(0, 0),\n        public mass: number = 0,\n        public elasticity: number = 0,\n        public friction: number = 0\n    ) { }\n\n    bounding(): Intersections.Bounding { return undefined; }\n    movable(): boolean { return this.mass != Infinity; }\n\n    forEachSimulable(callback: (object: Simulable) => void): void {\n        callback(this);\n    }\n\n    render(context: Context2D): void { }\n    update(timeDelta: number): void { }\n\n    affect(physical: Simulable[]): void { }\n}\n\nexport class Ground extends Entity {\n    constructor(public image: Image = undefined, _elasticity: number = Consts.GROUND_ELASTICITY) {\n        super(new Vec2(0, 0), Infinity, _elasticity, Consts.GROUND_FRICTION);\n    }\n\n    bounding(): Intersections.Bounding {\n        return new Intersections.AABB(new Vec2(-Infinity, -Infinity), new Vec2(Infinity, 0));\n    }\n\n    affect(affectedObjects: Simulable[]): void {\n        for (let affectedObject of affectedObjects) {\n            if (affectedObject.movable()) {\n                affectedObject.acceleration = affectedObject.acceleration.add(new Vec2(0, -Consts.PHYSICS_GRAVITY));\n            }\n        }\n    }\n\n    render(context: Context2D): void {\n        let matrix = context.transformMatrix(); // hacky calculations of visible area\n        let minX = -matrix[0][2] / matrix[0][0];\n        let maxX = minX + context.width() / matrix[0][0];\n\n        let minI = Math.floor(minX / 200) - 1;\n        let maxI = Math.ceil(maxX / 200) + 1;\n\n        if (this.image) {\n            for (let i = minI; i <= maxI; i++) {\n                context.save().translate(i * 200 - 1, 0).scale(1, -1);\n                context.drawImage(this.image, 0, 0, 200, 200);\n                context.restore();\n            }\n        } else {\n            context.fillRGBA(0, 127, 0).drawRect(-100000, -100000, 200000, 100000, true, false);\n        }\n\n        for (let i = minI; i <= maxI; i++) {\n            context.fillColor(Color.Black).drawRect(i * 200 - 1, -100000, 2, 100000, true, false);\n\n            context.save().translate(i * 200 - 1, 0).scale(1, -1);\n            context.fillColor(Color.White).strokeColor(Color.Black).lineWidth(2);\n            context.font(new Font(\"Arial\", 40, \"normal\", FontWeight.Bold));\n            context.drawText(12, 12, (i * 200).toString(), \"hanging\", true, true);\n            context.restore();\n        }\n    }\n}\n\nexport class Air extends Entity {\n    constructor(public image: Image = undefined, public resistance: number = Consts.AIR_RESISTANCE) {\n        super();\n    }\n\n    affect(objects: Simulable[]): void {\n        for (let obj of objects) {\n            if (obj.movable()) {\n                obj.acceleration = obj.acceleration.sub(obj.velocity.mul(this.resistance));\n            }\n        }\n    }\n\n    render(context: Context2D): void {\n        if (this.image) {\n            context.save().resetTransform();\n            context.drawImage(this.image, 0, 0, context.width(), context.height());\n            context.restore();\n        }\n    }\n}\n","import Vec2 from \"../util/Vec2\";\nimport * as Intersections from \"./Intersections\";\nimport * as Consts from \"../core/Consts\"\n\ninterface physicalBody {\n\tposition: Vec2;\n\tvelocity: Vec2;\n\tacceleration: Vec2;\n\n\tmass: number;\n\telasticity: number;\n\tfriction: number;\n\n\tbounding(): Intersections.Bounding;\n}\n\nexport default function Collide(lhs: physicalBody, rhs: physicalBody): void {\n\tif (lhs.mass == Infinity && rhs.mass != Infinity) {\n\t\t[lhs, rhs] = [rhs, lhs];\n\t}\n\tif (lhs.mass != Infinity && rhs.mass != Infinity && !Consts.ARE_BALLS_COLLIDABLE) {\n\t\treturn;\n\t}\n\n\tlet lBounds = lhs.bounding();\n\tlet rBounds = rhs.bounding();\n\n\tif (Intersections.areIntersecting(lBounds, rBounds)) {\n\n\t\tif (lhs.mass == Infinity && rhs.mass == Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet coefficientOfRestitution: number = (lhs.elasticity + rhs.elasticity) / 2;\n\t\tlet coefficientOfDynamicFriction: number = (lhs.friction + rhs.friction) / 2;\n\t\tlet coefficientOfStaticFriction: number = Math.sqrt(lhs.friction ** 2 + rhs.friction ** 2);\n\t\tlet normal: Vec2 = normalVector(lBounds, rBounds);\n\n\t\tif (lhs.mass != Infinity && rhs.mass != Infinity) {\n\t\t\tlet lhsVelocityOrthogontal: Vec2 = rhs.velocity.projection(normal).mul((coefficientOfRestitution + 1) * rhs.mass).add(\n\t\t\t\tlhs.velocity.projection(normal).mul(lhs.mass - coefficientOfRestitution * rhs.mass)).mul(1 / (lhs.mass + rhs.mass));\n\n\t\t\tlet lhsVelocityTangent: Vec2 = lhs.velocity.projection(new Vec2(-normal.y, normal.x));\n\n\n\t\t\tlet rhsVelocityOrthogontal: Vec2 = lhs.velocity.projection(normal).mul((coefficientOfRestitution + 1) * lhs.mass).sub(\n\t\t\t\trhs.velocity.projection(normal).mul(lhs.mass - coefficientOfRestitution * rhs.mass)).mul(1 / (lhs.mass + rhs.mass));\n\n\t\t\tlet rhsVelocityTangent: Vec2 = rhs.velocity.projection(new Vec2(-normal.y, normal.x));\n\n\n\t\t\tlet interpenetration: Vec2 = Intersections.interpenetrationVector(lBounds, rBounds);\n\t\t\tlhs.position = lhs.position.add(interpenetration.mul(rhs.mass / (lhs.mass + rhs.mass)));\n\t\t\trhs.position = rhs.position.sub(interpenetration.mul(lhs.mass / (lhs.mass + rhs.mass)));\n\n\t\t\tlhs.acceleration = lhs.acceleration.sub(rhs.acceleration.projection(normal));\n\t\t\trhs.acceleration = rhs.acceleration.sub(lhs.acceleration.projection(normal));\n\n\t\t\tlhs.velocity = lhsVelocityOrthogontal.add(lhsVelocityTangent);\n\t\t\trhs.velocity = rhsVelocityOrthogontal.add(rhsVelocityTangent);\n\t\t}\n\n\t\telse if (lhs.mass != Infinity && rhs.mass == Infinity) {\n\n\t\t\tlet lhsAccelerationOrthogontal: Vec2 = lhs.acceleration.projection(normal);\n\t\t\tlet lhsAccelerationTangent: Vec2 = lhs.acceleration.projection(new Vec2(-normal.y, normal.x));\n\n\t\t\tlhs.position = lhs.position.add(Intersections.interpenetrationVector(lBounds, rBounds));\n\n\t\t\tlet lhsVelocityOrthogontal: Vec2 = rhs.velocity.projection(normal).mul(coefficientOfRestitution + 1).sub(\n\t\t\t\tlhs.velocity.projection(normal).mul(coefficientOfRestitution));\n\n\t\t\tlet lhsVelocityTangent: Vec2 = lhs.velocity.projection(new Vec2(-normal.y, normal.x));\n\n\t\t\tif (lhsVelocityTangent.length() > 10 * lhs.mass * lhs.friction) {\n\t\t\t\tlhs.acceleration = lhs.acceleration.add(lhsVelocityTangent.normal().mul(\n\t\t\t\t\t-lhsAccelerationOrthogontal.mul(lhs.mass * coefficientOfDynamicFriction).length()));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlhsVelocityTangent = new Vec2(0, 0);\n\t\t\t\tif (lhsAccelerationTangent.length() <= lhsVelocityOrthogontal.length() * coefficientOfStaticFriction * lhs.mass) {\n\t\t\t\t\tlhs.acceleration = lhs.acceleration.sub(lhsAccelerationTangent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlhs.velocity = lhsVelocityOrthogontal.add(lhsVelocityTangent);\n\t\t}\n\t}\n}\n\nexport function normalVector(lhs: Intersections.Bounding, rhs: Intersections.Bounding) {\n\tif (lhs instanceof Intersections.Circle && rhs instanceof Intersections.Circle) {\n\t\tlet orthogontal: Vec2 = lhs.position.sub(rhs.position).normal();\n\t\treturn orthogontal;\n\t}\n\telse {\n\t\treturn new Vec2(0, 1);\n\t}\n}\n","import Collide from \"./Collisions\";\nimport * as Interface from \"./Interface\";\nimport * as Intersections from \"./Intersections\";\nimport Vec2 from \"../util/Vec2\"\n\nexport default function Simulate(simulables: Interface.Simulable[], timeDelta: number): void {\n\n\tfor (let physical of simulables) {\n\t\tphysical.affect(simulables);\n\t}\n\n\tfor (let i = 0; i < simulables.length; i++) {\n\t\tfor (let j = i + 1; j < simulables.length; ++j) {\n\t\t\tCollide(simulables[i], simulables[j]);\n\t\t}\n\t}\n\tfor (let physical of simulables) {\n\t\tphysical.velocity = physical.velocity.add(physical.acceleration.mul(timeDelta));\n\t\tphysical.acceleration = new Vec2(0, 0);\n\t\tphysical.position = physical.position.add(physical.velocity.mul(timeDelta));\n\t}\n}","import { Renderable } from \"../graphics/Renderable\"\nimport { Entity } from \"./Entity\"\nimport { Simulable } from \"../physics/Interface\"\nimport { Context2D } from \"../graphics/Context2D\"\nimport * as Arrays from \"../util/Arrays\"\nimport Simulate from \"../physics/Simulate\"\n\nexport class Scene implements Renderable {\n\tentities: Entity[] = new Array<Entity>();\n\tphysical: Simulable[] = new Array<Simulable>();\n\n\taddEntity(entity: Entity) {\n\t\tthis.entities.push(entity);\n\t\tentity.forEachSimulable((obj: Simulable) => this.addSimulable(obj));\n\t}\n\tremoveEntity(entity: Entity) {\n\t\tArrays.remove(this.entities, entity);\n\t\tentity.forEachSimulable((obj: Simulable) => this.removeSimulable(obj));\n\t}\n\n\tprivate addSimulable(object: Simulable) {\n\t\tthis.physical.push(object);\n\t}\n\tprivate removeSimulable(object: Simulable) {\n\t\tArrays.remove(this.physical, object);\n\t}\n\n\tupdate(timeDelta: number) {\n\t\tfor (let entity of this.entities) {\n\t\t\tentity.update(timeDelta);\n\t\t}\n\t\tSimulate(this.physical, timeDelta);\n\t}\n\n\trender(context: Context2D) {\n\t\tcontext.save().scale(1, -1); // flip Y coordinate\n\t\tfor (let entity of this.entities) {\n\t\t\tentity.render(context);\n\t\t}\n\t\tcontext.restore();\n\t}\n}\n","export default class DisjointNode {\n    constructor(public parent: DisjointNode = null, public size: number = 1, public rank: number = 0) {\n    }\n\n    getParent(): DisjointNode {\n        if (this.parent == null) {\n            return this;\n        }\n\n        let parent: DisjointNode = this.parent.getParent();\n        this.parent = parent;\n        return parent;\n    }\n\n    union(rhs: DisjointNode): void {\n        let lhsParent: DisjointNode = this.getParent();\n        let rhsParent: DisjointNode = rhs.getParent();\n\n        if (lhsParent == rhsParent) {\n            return;\n        }\n\n        if (lhsParent.rank < rhsParent.rank) {\n            lhsParent.parent = rhsParent;\n            rhsParent.size += lhsParent.size;\n        } else if (lhsParent.rank > rhsParent.rank) {\n            rhsParent.parent = lhsParent;\n            lhsParent.size += rhsParent.size;\n        } else {\n            lhsParent.parent = rhsParent;\n            rhsParent.size += lhsParent.size;\n            rhsParent.rank++;\n        }\n    }\n\n    isSameSet(rhs: DisjointNode): boolean {\n        return (this.getParent() == rhs.getParent() ? true : false);\n    }\n\n    getSize(): number {\n        return this.getParent().size;\n    }\n}","import { Creature } from \"./Creature\"\nimport { CreatureBone } from \"./Creature\"\nimport Vec2 from \"../util/Vec2\"\nimport { CreatureMuscle } from \"./Creature\"\nimport Collide from \"../physics/Collisions\";\nimport * as MathUtil from \"../util/Math\"\nimport * as Consts from \"./Consts\"\n\nexport function generateCreature(): Creature {\n    while (true) {\n        let generated: Creature = new Creature();\n\n        let numberOfBones: number = Math.floor(MathUtil.random(Consts.GENERATOR_BONE_MIN_AMOUNT, Consts.GENERATOR_BONE_MAX_AMOUNT + 1));\n        for (let i = 0; i < numberOfBones; ++i) {\n            generated.bones.push(generateCreatureBone());\n        }\n\n        for (let i = 0; i < numberOfBones; ++i) {\n            for (let j = i + 1; j < numberOfBones; ++j) {\n                Collide(generated.bones[i], generated.bones[j]);\n\n                if (Math.random() >= 0.5) {\n                    generated.muscles.push(generateCreatureMuscle(generated.bones[i], generated.bones[j]));\n                }\n            }\n        }\n\n        if (generated.isStronglyConnected()) {\n            return generated;\n        }\n    }\n}\n\nexport function generateCreatureBone(): CreatureBone {\n    let newBone: CreatureBone = new CreatureBone(\n        new Vec2(Math.random() * 500 - 1000, Math.random() * 500 - 1000 + 1500),\n        MathUtil.random(Consts.GENERATOR_BONE_MIN_RADIUS, Consts.GENERATOR_BONE_MAX_RADIUS),\n        0, // Mass will be calculated later\n        Math.random(),\n        Math.random()\n    );\n\n    newBone.mass = Math.PI * newBone.radius / 20;\n    return newBone;\n}\n\nexport function generateCreatureMuscle(lhs: CreatureBone, rhs: CreatureBone) {\n    let dist: number = lhs.position.distance(rhs.position);\n    let len1: number = dist * MathUtil.random(Consts.GENERATOR_MUSCLE_MIN_LENGTH_DIST_FACTOR, Consts.GENERATOR_MUSCLE_MAX_LENGTH_DIST_FACTOR) +\n        MathUtil.random(Consts.GENERATOR_MUSCLE_MIN_LENGTH_CONST, Consts.GENERATOR_MUSCLE_MAX_LENGTH_CONST);\n    let len2: number = len1 * (1 + MathUtil.random(Consts.GENERATOR_MUSCLE_MIN_RELATIVE_LENGTH_DIFF, Consts.GENERATOR_MUSCLE_MAX_RELATIVE_LENGTH_DIFF));\n    let str: number = MathUtil.random(Consts.GENERATOR_MUSCLE_MIN_STRENGTH, Consts.GENERATOR_MUSCLE_MAX_STRENGTH);\n    let interval: number = MathUtil.random(Consts.GENERATOR_MUSCLE_MIN_INTERVAL, Consts.GENERATOR_MUSCLE_MAX_INTERVAL);\n    let expandFactor: number = MathUtil.random(Consts.GENERATOR_MUSCLE_MIN_EXPAND_FACTOR, Consts.GENERATOR_MUSCLE_MAX_EXPAND_FACTOR);\n\n    return new CreatureMuscle(\n        lhs, rhs,\n        len1, len2,\n        str,\n        interval,\n        expandFactor\n    );\n}","import { Creature } from \"./Creature\"\nimport { CreatureBone } from \"./Creature\"\nimport Vec2 from \"../util/Vec2\"\nimport { CreatureMuscle } from \"./Creature\"\n\nexport default function breed(lhs: Creature, rhs: Creature): Creature {\n\tif (lhs.bones.length != rhs.bones.length) {\n\t\tthrow \"Not implemented\";\n\t}\n\n\twhile (true) {\n\t\tlet compBones = function(lhs: CreatureBone, rhs: CreatureBone) {\n\t\t\tif (lhs.position == rhs.position) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse if (lhs.position.x < rhs.position.x) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse if (lhs.position.x == rhs.position.x && lhs.position.y < rhs.position.y) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t};\n\n\t\tlhs.bones.sort(compBones);\n\t\trhs.bones.sort(compBones);\n\n\t\tlet kid = new Creature();\n\t\tfor (let i = 0; i < lhs.bones.length; ++i) {\n\t\t\tkid.bones.push(\n\t\t\t\tnew CreatureBone(\n\t\t\t\t\tnew Vec2((lhs.bones[i].position.x + rhs.bones[i].position.x) / 2,\n\t\t\t\t\t\t(lhs.bones[i].position.y + rhs.bones[i].position.y) / 2),\n\t\t\t\t\t\t(lhs.bones[i].radius + rhs.bones[i].radius) / 2,\n\t\t\t\t\t\t(lhs.bones[i].mass + rhs.bones[i].mass) / 2,\n\t\t\t\t\t\t(lhs.bones[i].elasticity + rhs.bones[i].elasticity) / 2,\n\t\t\t\t\t\t(lhs.bones[i].friction + rhs.bones[i].friction) / 2\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\n\t\tlet getMuscleIn = function(lhs: CreatureBone, rhs: CreatureBone, muscles: CreatureMuscle[]) {\n\t\t\tfor (let i = 0; i < muscles.length; ++i) {\n\n\t\t\t\tif ((muscles[i].bone1 == lhs && muscles[i].bone2 == rhs) || (muscles[i].bone1 == rhs && muscles[i].bone2 == lhs)) {\n\t\t\t\t\treturn muscles[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\tfor (let i = 0; i < lhs.bones.length; ++i) {\n\t\t\tfor (var j = i + 1; j < lhs.bones.length; ++j) {\n\t\t\t\tlet lhsMuscle: CreatureMuscle = getMuscleIn(lhs.bones[i], lhs.bones[j], lhs.muscles);\n\t\t\t\tlet rhsMuscle: CreatureMuscle = getMuscleIn(rhs.bones[i], rhs.bones[j], rhs.muscles);\n\n\t\t\t\tif (lhsMuscle != undefined && rhsMuscle != undefined) {\n\t\t\t\t\tkid.muscles.push(new CreatureMuscle(\n\t\t\t\t\t\tkid.bones[i],\n\t\t\t\t\t\tkid.bones[j],\n\t\t\t\t\t\t(lhsMuscle.minLength + rhsMuscle.minLength) / 2,\n\t\t\t\t\t\t(lhsMuscle.maxLength + rhsMuscle.maxLength) / 2,\n\t\t\t\t\t\t(lhsMuscle.strength + rhsMuscle.strength) / 2,\n\t\t\t\t\t\t(lhsMuscle.timerInterval + rhsMuscle.timerInterval) / 2,\n\t\t\t\t\t\t(lhsMuscle.expandFactor + rhsMuscle.expandFactor) / 2\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t}\n\t\t\t\telse if (lhsMuscle != undefined && Math.random() >= 0.5) {\n\t\t\t\t\tkid.muscles.push(new CreatureMuscle(\n\t\t\t\t\t\tkid.bones[i],\n\t\t\t\t\t\tkid.bones[j],\n\t\t\t\t\t\tlhsMuscle.minLength,\n\t\t\t\t\t\tlhsMuscle.maxLength,\n\t\t\t\t\t\tlhsMuscle.strength,\n\t\t\t\t\t\tlhsMuscle.timerInterval,\n\t\t\t\t\t\tlhsMuscle.expandFactor\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if (rhsMuscle != undefined && Math.random() >= 0.5) {\n\t\t\t\t\tkid.muscles.push(new CreatureMuscle(\n\t\t\t\t\t\tkid.bones[i],\n\t\t\t\t\t\tkid.bones[j],\n\t\t\t\t\t\trhsMuscle.minLength,\n\t\t\t\t\t\trhsMuscle.maxLength,\n\t\t\t\t\t\trhsMuscle.strength,\n\t\t\t\t\t\trhsMuscle.timerInterval,\n\t\t\t\t\t\trhsMuscle.expandFactor\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (kid.isStronglyConnected()) {\n\t\t\treturn kid;\n\t\t}\n\t}\n}\n","import { Air, Ground } from \"./Entity\"\nimport { Image } from \"../graphics/Image\"\nimport { Creature } from \"./Creature\"\nimport { Scene } from \"./Scene\"\n\nlet SkyImage: Image;\nlet GroundImage: Image;\n\nexport function setResources(skyImage: Image, groundImage: Image) {\n\tSkyImage = skyImage;\n\tGroundImage = groundImage;\n}\n\nexport function creatureScene(creature?: Creature): Scene {\n\tlet scene = new Scene();\n\tscene.addEntity(new Air(SkyImage));\n\tscene.addEntity(new Ground(GroundImage));\n\tif (creature) {\n\t\tscene.addEntity(creature);\n\t}\n\treturn scene;\n}\n","import { Creature, CreatureBone, CreatureMuscle } from \"./Creature\"\nimport * as Generator from \"./Generator\";\nimport Vec2 from \"../util/Vec2\";\nimport Breed from \"./Breed\"\nimport { Scene } from \"./Scene\"\nimport * as Consts from \"./Consts\"\nimport * as Util from \"./Util\"\nimport * as MathUtil from \"../util/Math\"\nimport * as Compress from \"./Compress\"\n\nexport default class Population {\n\n\tconstructor(size: number = 1000) {\n\t\tthis.addRandomlyGeneratedCreatures(size);\n\t\tthis.moveAllToStartingPosition();\n\t}\n\n\tsortCreatures(): void {\n\t\tthis.population.sort(\n\t\t\tfunction (lhs: Creature, rhs: Creature) {\n\t\t\t\tif (lhs.result == rhs.result) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\telse if (lhs.result < rhs.result) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tpush(newCreature: Creature): void {\n\t\tthis.population.push(newCreature);\n\t}\n\n\tremoveSlowest(amount: number = this.population.length / 2): void {\n\t\tthis.sortCreatures();\n\n\t\tfor (let i = 0; i < this.population.length; i++) {\n\t\t\tif(this.population[i].result < Consts.NO_HOPE_VALUE || MathUtil.randomChance(MathUtil.tanh(Consts.KILLING_CHANCE_FACTOR * i / this.population.length))) {\n\t\t\t\tthis.population.splice(i,1);\n\t\t\t\tamount--;\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\tconsole.log(amount);\n\n\t\twhile(amount > 0) {\n\t\t\tthis.population.pop();\n\t\t\tamount--;\t\n\t\t}\n\t}\n\n\taddRandomlyGeneratedCreatures(amount: number = 1): void {\n\t\tfor (let i = 0; i < amount; ++i) {\n\t\t\tthis.push(Generator.generateCreature());\n\t\t}\n\t}\n\n\tmoveAllToStartingPosition(): void {\n\t\tfor (let creature of this.population) {\n\t\t\t// creature.result = -Infinity;\n\t\t\tlet center: Vec2 = creature.center();\n\n\t\t\tfor (let bone of creature.bones) {\n\t\t\t\tbone.position = bone.position.sub(center);\n\t\t\t\tbone.position.y = bone.position.y + 300;\n\t\t\t}\n\t\t}\n\t}\n\n\trate(): void {\n\t\tfor (let creature of this.population) {\n\t\t\tif (creature.result != -Infinity) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet clone = creature.clone();\n\t\t\tthis.scene.addEntity(clone);\n\n\t\t\tfor (let i = 0; i < Consts.RUN_DURATION * Consts.SIMULATION_RESOLUTION; i++) {\n\t\t\t\tthis.scene.update(1 / Consts.SIMULATION_RESOLUTION);\n\t\t\t}\n\n\t\t\tcreature.result = clone.currentResult();\n\t\t\tcreature.resultWithoutPenalties = clone.currentResult();\n\t\t\tthis.scene.removeEntity(clone);\n\t\t}\n\n\t\tthis.sortCreatures();\n\n\t\tlet howManyComparisons: number = Consts.HOW_MANY_COMPARISONS;\n\t\tif((this.generation + 1) % Consts.COMPARE_EVERYONE_INTERVAL == 0) {\n\t\t\thowManyComparisons = this.population.length;\n\t\t}\n\n\t\tfor (let i = 0; i <  this.population.length; ++i) {\n\t\t\tlet lhs = this.population[i];\n\t\t\tlet delta = 0;\n\t\t\t\n\t\t\tfor(let j = 0; j < Math.min(howManyComparisons, i); ++j) {\n\t\t\t\tif(j == i) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet rhs = this.population[j];\n\t\t\t\tdelta += Consts.CREATUREDIFF_MULTIPLIER/(lhs.diff(rhs) + 1);//Math.max(Consts.CREATUREDIFF_MULTIPLIER/(lhs.diff(rhs) + 1), delta);\n\t\t\t}\n\n\t\t\t// console.log(delta)\n\t\t\tdelta *= 50/lhs.bones.length;\n\t\t\tlhs.result -= delta;\n\t\t\tlhs.minusPoints = delta;\n\t\t}\n\n\t\tthis.sortCreatures();\n\t\tconsole.log(\"Best: \", this.population[0].result);\n\t}\n\n\teugenics(): void {\n\t\tif(Consts.ENABLE_MASS_DESTRUCTION && (this.generation + 1) % Consts.MASS_DESTRUCTION_INTERVAL == 0) {\n\t\t\tthis.removeSlowest(Math.floor(this.population.length * Consts.MASS_DESTRUCTION_FACTOR));\n\n\t\t\twhile (this.population.length < Consts.POPULATION_SIZE) {\n\t\t\t\tthis.push(Generator.generateCreature());\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.removeSlowest();\n\t\t}\n\t\tlet oldPopulationSize = this.population.length;\n\n\t\twhile (this.population.length < Consts.FRACTION_OF_BREEDED_POPULATION * Consts.POPULATION_SIZE) {\n\t\t\tlet fatherIndex = 0;\n\t\t\tlet motherIndex = 0;\n\n\t\t\twhile(fatherIndex == motherIndex && oldPopulationSize != 1) {\n\t\t\t\tfatherIndex = Math.floor(Math.random() * oldPopulationSize);\n\t\t\t\tmotherIndex = Math.floor(Math.random() * oldPopulationSize);\n\t\t\t}\n\n\t\t\tlet father: Creature = this.population[fatherIndex];\n\t\t\tlet mother: Creature = this.population[motherIndex];\n\n\t\t\tlet kid: Creature = undefined;\n\t\t\ttry {\n\t\t\t\tkid = Breed(mother, father).mutate();\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.push(kid);\n\t\t}\n\n\t\twhile (this.population.length < Consts.POPULATION_SIZE) {\n\t\t\tthis.push(Generator.generateCreature());\n\t\t}\n\n\t\tthis.moveAllToStartingPosition();\n\t\tthis.generation++;\n\t}\n\n\tpopulation: Creature[] = new Array<Creature>();\n\tgeneration: number = 0;\n\n\tprivate scene: Scene = Util.creatureScene();\n\n\tsave(): string {\n\t\treturn JSON.stringify(Compress.compressPopulation(this));\n\t}\n\n\tload(json: string): void {\n\t\tlet packed = <Compress.PopulationPacked>JSON.parse(json);\n\t\tthis.population = new Array<Creature>(packed.population.length);\n\t\tthis.generation = packed.generation;\n\n\t\tfor (let i = 0; i < packed.population.length; i++) {\n\t\t\tlet packedCreature = packed.population[i];\n\t\t\tlet creature = new Creature(\n\t\t\t\tnew Array<CreatureBone>(packedCreature.bones.length),\n\t\t\t\tnew Array<CreatureMuscle>(packedCreature.muscles.length)\n\t\t\t);\n\t\t\tthis.population[i] = creature;\n\n\t\t\tfor (let j = 0; j < creature.bones.length; j++) {\n\t\t\t\tlet packedBone = packedCreature.bones[j];\n\n\t\t\t\tcreature.bones[j] = new CreatureBone(\n\t\t\t\t\tnew Vec2(packedBone.position[0], packedBone.position[1]),\n\t\t\t\t\tpackedBone.radius,\n\t\t\t\t\tpackedBone.mass,\n\t\t\t\t\tpackedBone.elasticity,\n\t\t\t\t\tpackedBone.friction\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tfor (let j = 0; j < creature.muscles.length; j++) {\n\t\t\t\tlet packedMuscle = packedCreature.muscles[j];\n\n\t\t\t\tcreature.muscles[j] = new CreatureMuscle(\n\t\t\t\t\tcreature.bones[packedMuscle.bone1],\n\t\t\t\t\tcreature.bones[packedMuscle.bone2],\n\t\t\t\t\tpackedMuscle.minLength,\n\t\t\t\t\tpackedMuscle.maxLength,\n\t\t\t\t\tpackedMuscle.strength,\n\t\t\t\t\tpackedMuscle.timerInterval,\n\t\t\t\t\tpackedMuscle.expandFactor\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Creature, CreatureBone, CreatureMuscle } from \"./Creature\"\nimport Population from \"./Population\"\n\nexport class PopulationPacked {\n\tpopulation: CreaturePacked[];\n\tgeneration: number;\n}\n\nexport class CreaturePacked {\n\tbones: CreatureBonePacked[];\n\tmuscles: CreatureMusclePacked[];\n}\n\nexport class CreatureBonePacked {\n\tposition: number[];\n\tradius: number = 1;\n\tmass: number = 1;\n\telasticity: number = 0.75;\n\tfriction: number = 0;\n}\n\nexport class CreatureMusclePacked {\n\tbone1: number;\n\tbone2: number;\n\tminLength: number;\n\tmaxLength: number;\n\tstrength: number;\n\ttimerInterval: number;\n\texpandFactor: number;\n}\n\nexport function compressCreatureBone(bone: CreatureBone): CreatureBonePacked {\n    let packedBone = new CreatureBonePacked();\n\n    packedBone.position = [bone.position.x, bone.position.y];\n    packedBone.radius = bone.radius;\n    packedBone.mass = bone.mass;\n    packedBone.elasticity = bone.elasticity;\n    packedBone.friction = bone.friction;\n\n    return packedBone;\n}\n\nexport function compressCreatureMuscle(muscle: CreatureMuscle, creature: Creature): CreatureMusclePacked {\n    let packedMuscle = new CreatureMusclePacked();\n\n    packedMuscle.bone1 = creature.bones.indexOf(muscle.bone1);\n    packedMuscle.bone2 = creature.bones.indexOf(muscle.bone2);\n    packedMuscle.minLength = muscle.minLength;\n    packedMuscle.maxLength = muscle.maxLength;\n    packedMuscle.strength = muscle.strength;\n    packedMuscle.timerInterval = muscle.timerInterval;\n    packedMuscle.expandFactor = muscle.expandFactor;\n\n    return packedMuscle;\n}\n\nexport function compressCreature(creature: Creature): CreaturePacked {\n    let packedCreature = new CreaturePacked();\n\n    packedCreature.bones = new Array<CreatureBonePacked>(creature.bones.length);\n    packedCreature.muscles = new Array<CreatureMusclePacked>(creature.muscles.length);\n\n    for (let i = 0; i < creature.bones.length; ++i) {\n        let bone = creature.bones[i];\n        packedCreature.bones[i] = compressCreatureBone(bone);\n    }\n\n    for (let i = 0; i < creature.muscles.length; ++i) {\n        let muscle = creature.muscles[i];\n        packedCreature.muscles[i] = compressCreatureMuscle(muscle, creature);\n    }\n\n    return packedCreature;\n}\n\nexport function compressPopulation(population: Population): PopulationPacked {\n    let packed = new PopulationPacked();\n    packed.population = new Array<CreaturePacked>(population.population.length);\n    packed.generation = population.generation;\n\n    for (let i = 0; i < population.population.length; ++i) {\n        let creature = population.population[i];\n        packed.population[i] = compressCreature(creature);\n    }\n\n    return packed;\n}","import Color from \"./Color\"\n\nclass PseudoGradientElement {\n    public value: number;\n    public color: Color;\n}\n\nexport default class PseudoGradient {\n    constructor(public vec: Array<PseudoGradientElement> = new Array<PseudoGradientElement>()) {\n\n    }\n\n    get(value: number): Color {\n        if (this.vec.length == 0) {\n            return Color.Transparent;\n        }\n\n        if (value < this.vec[0].value) {\n            return this.vec[0].color;\n        } else if (value >= this.vec[this.vec.length - 1].value) {\n            return this.vec[this.vec.length - 1].color;\n        }\n\n        for (let i: number = 0; i < this.vec.length - 1; ++i) {\n            if (this.vec[i].value <= value && this.vec[i + 1].value > value) {\n                let relative: number = (value - this.vec[i].value) / (this.vec[i + 1].value - this.vec[i].value);\n                return new Color(\n                    Math.round(this.vec[i].color.r * (1 - relative) + this.vec[i + 1].color.r * relative),\n                    Math.round(this.vec[i].color.g * (1 - relative) + this.vec[i + 1].color.g * relative),\n                    Math.round(this.vec[i].color.b * (1 - relative) + this.vec[i + 1].color.b * relative),\n                    Math.round(this.vec[i].color.a * (1 - relative) + this.vec[i + 1].color.a * relative)\n                );\n            }\n        }\n\n        return Color.Transparent;\n    }\n\n    insert(elem: PseudoGradientElement): void {\n        this.vec.push(elem);\n    }\n\n    prepare(): void {\n        this.vec.sort(\n            (lhs: PseudoGradientElement, rhs: PseudoGradientElement) => {\n                if (lhs.value < rhs.value) {\n                    return -1;\n                } else if (lhs.value > rhs.value) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            }\n        )\n    }\n}","import Vec2 from \"../util/Vec2\"\nimport { Entity } from \"./Entity\"\nimport { Simulable } from \"../physics/Interface\"\nimport { Context2D } from \"../graphics/Context2D\"\nimport Color from \"../util/Color\"\nimport * as Intersections from \"../physics/Intersections\"\nimport * as utilMath from \"../util/Math\"\nimport * as Consts from \"./Consts\"\nimport DisjointNode from \"../util/DisjointSet\"\nimport * as Generator from \"./Generator\"\nimport * as Compress from \"./Compress\"\nimport PseudoGradient from \"../util/PseudoGradient\"\n\nlet bonePseudoGradient: PseudoGradient = new PseudoGradient();\nbonePseudoGradient.insert({ value: 0.00, color: Color.White  }); // low friction\nbonePseudoGradient.insert({ value: 0.33, color: Color.Yellow });\nbonePseudoGradient.insert({ value: 0.66, color: Color.Red    });\nbonePseudoGradient.insert({ value: 1.00, color: Color.Black  }); // high friction\nbonePseudoGradient.prepare();\n\nexport class Creature extends Entity {\n\tconstructor(\n\t\tpublic bones: CreatureBone[] = new Array<CreatureBone>(),\n\t\tpublic muscles: CreatureMuscle[] = new Array<CreatureMuscle>(),\n\t\tpublic result: number = -Infinity,\n\t\tpublic resultWithoutPenalties: number = -Infinity\n\t) {\n\t\tsuper();\n\t}\n\n\tmovable(): boolean { return false; } // movable are its parts, creature is just group\n\n\tforEachSimulable(callback: (object: Simulable) => void): void {\n\t\tfor (let muscle of this.muscles) {\n\t\t\tcallback(muscle);\n\t\t}\n\t\tfor (let bone of this.bones) {\n\t\t\tcallback(bone);\n\t\t}\n\t}\n\n\trender(context: Context2D): void {\n\t\tfor (let muscle of this.muscles) {\n\t\t\tmuscle.render(context);\n\t\t}\n\t\tfor (let bone of this.bones) {\n\t\t\tbone.render(context);\n\t\t}\n\t}\n\n\tcurrentResult(): number {\n\t\tlet fitness: number = Infinity;\n\t\tfor (let bone of this.bones) {\n\t\t\tfitness = Math.min(fitness, bone.position.x);\n\t\t}\n\t\treturn fitness;\n\t}\n\n\textremes(): Intersections.AABB {\n\t\tlet aabb = new Intersections.AABB(new Vec2(Infinity, Infinity), new Vec2(-Infinity, -Infinity));\n\n\t\tfor (let bone of this.bones) {\n\t\t\taabb.min.x = Math.min(aabb.min.x, bone.position.x - bone.radius);\n\t\t\taabb.min.y = Math.min(aabb.min.y, bone.position.y - bone.radius);\n\t\t\taabb.max.x = Math.max(aabb.max.x, bone.position.x + bone.radius);\n\t\t\taabb.max.y = Math.max(aabb.max.y, bone.position.y + bone.radius);\n\t\t}\n\t\treturn aabb;\n\t}\n\n\tcenter(): Vec2 {\n\t\tlet avg = new Vec2();\n\t\tfor (let bone of this.bones) {\n\t\t\tavg = avg.add(bone.position);\n\t\t}\n\t\treturn avg.div(this.bones.length);\n\t}\n\n\tupdate(timeDelta: number): void {\n\t\tfor (let i: number = 0; i < this.bones.length; ++i) {\n\t\t\tthis.bones[i].update(timeDelta);\n\t\t}\n\n\t\tfor (let i: number = 0; i < this.muscles.length; ++i) {\n\t\t\tthis.muscles[i].update(timeDelta);\n\t\t}\n\t}\n\n\tprivate makeDisjointSet(): Array<DisjointNode> {\n\t\tlet disjoint: Array<DisjointNode> = new Array<DisjointNode>(this.bones.length);\n\n\t\tfor (let i: number = 0; i < this.bones.length; ++i) {\n\t\t\tdisjoint[i] = new DisjointNode();\n\t\t}\n\n\t\tfor (let i: number = 0; i < this.muscles.length; ++i) {\n\t\t\tlet lhsId: number = this.bones.indexOf(this.muscles[i].bone1);\n\t\t\tlet rhsId: number = this.bones.indexOf(this.muscles[i].bone2);\n\n\t\t\tdisjoint[lhsId].union(disjoint[rhsId]);\n\t\t}\n\n\t\treturn disjoint;\n\t}\n\n\tisStronglyConnected(): boolean {\n\t\treturn (this.bones.length <= 1 ? true : this.makeDisjointSet()[0].getSize() == this.bones.length);\n\t}\n\n\tmakeStronglyConnected(): this {\n\t\tif (this.isStronglyConnected()) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet disjoint: Array<DisjointNode> = this.makeDisjointSet();\n\t\tfor (let i: number = 1; i < disjoint.length; ++i) {\n\t\t\tif (disjoint[0].isSameSet(disjoint[i]) == false) {\n\t\t\t\tthis.muscles.push(Generator.generateCreatureMuscle(this.bones[0], this.bones[i]));\n\t\t\t\tdisjoint[0].union(disjoint[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tclone(): Creature {\n\t\tlet myClone = new Creature();\n\n\t\tfor (let bone of this.bones) {\n\t\t\tmyClone.bones.push(new CreatureBone(\n\t\t\t\tbone.position,\n\t\t\t\tbone.radius,\n\t\t\t\tbone.mass,\n\t\t\t\tbone.elasticity,\n\t\t\t\tbone.friction\n\t\t\t)\n\t\t\t)\n\t\t}\n\n\t\tlet getMuscleIn = function (lhs: CreatureBone, rhs: CreatureBone, muscles: CreatureMuscle[]) {\n\t\t\tfor (let i = 0; i < muscles.length; ++i) {\n\n\t\t\t\tif ((muscles[i].bone1 == lhs && muscles[i].bone2 == rhs) || (muscles[i].bone1 == rhs && muscles[i].bone2 == lhs)) {\n\t\t\t\t\treturn muscles[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\tfor (let i = 0; i < this.bones.length; ++i) {\n\t\t\tfor (let j = i + 1; j < this.bones.length; ++j) {\n\t\t\t\tlet muscle: CreatureMuscle = getMuscleIn(this.bones[i], this.bones[j], this.muscles);\n\t\t\t\tif (muscle != undefined) {\n\t\t\t\t\tmyClone.muscles.push(new CreatureMuscle(\n\t\t\t\t\t\tmyClone.bones[i],\n\t\t\t\t\t\tmyClone.bones[j],\n\t\t\t\t\t\tmuscle.minLength,\n\t\t\t\t\t\tmuscle.maxLength,\n\t\t\t\t\t\tmuscle.strength,\n\t\t\t\t\t\tmuscle.timerInterval,\n\t\t\t\t\t\tmuscle.expandFactor\n\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn myClone;\n\t}\n\n\tmutate(): Creature {\n\t\tif (!utilMath.randomChance(Consts.MUTATION_CHANCE)) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Remove nodes\n\t\tfor (let i: number = this.bones.length - 1; i >= 0; --i) {\n\t\t\tif (this.bones.length > 1 && utilMath.randomChance(Consts.MUTATION_DELETE_BONE_CHANCE)) {\n\t\t\t\tfor (let j: number = this.muscles.length - 1; j >= 0; --j) {\n\t\t\t\t\tif (this.muscles[j].bone1 == this.bones[i] || this.muscles[j].bone2 == this.bones[i]) {\n\t\t\t\t\t\tthis.muscles.splice(j, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.bones.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.makeStronglyConnected();\n\n\t\t// Add random node\n\t\tif (utilMath.randomChance(Consts.MUTATION_ADD_BONE_CHANCE)) {\n\t\t\tthis.bones.push(Generator.generateCreatureBone());\n\t\t\tlet edges: number = 0;\n\n\t\t\tfor (let i: number = 0; i < this.bones.length - 1; ++i) {\n\t\t\t\tif (utilMath.randomChance(Consts.MUTATION_CONNECTION_CHANCE)) {\n\t\t\t\t\tthis.muscles.push(Generator.generateCreatureMuscle(this.bones[i], this.bones[this.bones.length - 1]));\n\t\t\t\t\tedges++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (edges == 0) {\n\t\t\t\tthis.bones.pop();\n\t\t\t}\n\t\t}\n\n\t\t// Random bone friction\n\t\tfor (let i: number = 0; i < this.bones.length; ++i) {\n\t\t\tif (utilMath.randomChance(Consts.MUTATION_BONE_FRICTION_CHANCE)) {\n\t\t\t\tlet diff: number = this.bones[i].friction * (Consts.MUTATION_RELATIVE_FRICTION_DIFF / 2) * Math.random();\n\t\t\t\tdiff *= (utilMath.randomChance(0.5) ? -1 : 1);\n\n\t\t\t\tlet newFriction = this.bones[i].friction + diff;\n\t\t\t\tnewFriction = Math.min(newFriction, 1);\n\t\t\t\tnewFriction = Math.max(newFriction, 0);\n\n\t\t\t\tthis.bones[i].friction = newFriction;\n\t\t\t}\n\t\t}\n\n\t\t// Random bone elasticity\n\t\tfor (let i: number = 0; i < this.bones.length; ++i) {\n\t\t\tif (utilMath.randomChance(Consts.MUTATION_ELASTICITY_FRICTION_CHANCE)) {\n\t\t\t\tlet diff: number = this.bones[i].friction * (Consts.MUTATION_ELASTICITY_FRICTION_DIFF / 2) * Math.random();\n\t\t\t\tdiff *= (utilMath.randomChance(0.5) ? -1 : 1);\n\n\t\t\t\tlet newElasticity = this.bones[i].friction + diff;\n\t\t\t\tnewElasticity = Math.min(newElasticity, 1);\n\t\t\t\tnewElasticity = Math.max(newElasticity, 0);\n\n\t\t\t\tthis.bones[i].elasticity = newElasticity;\n\t\t\t}\n\t\t}\n\n\t\t// Random bone position\n\t\tfor (let bone of this.bones) {\n\t\t\tif (utilMath.randomChance(Consts.MUTATION_CHANGE_BONE_POS_CHANCE)) {\n\t\t\t\tthis.position.x += utilMath.random(Consts.MUTATION_CHANGE_BONE_POS_MIN, Consts.MUTATION_CHANGE_BONE_POS_MAX);\n\t\t\t\tthis.position.y += utilMath.random(Consts.MUTATION_CHANGE_BONE_POS_MIN, Consts.MUTATION_CHANGE_BONE_POS_MAX);\n\t\t\t}\n\t\t}\n\n\t\t// Random musscle strength\n\t\tfor (let i: number = 0; i < this.muscles.length; ++i) {\n\t\t\tif (utilMath.randomChance(Consts.MUTATION_MUSCLE_STRENGTH_CHANCE)) {\n\t\t\t\tlet diff: number = this.muscles[i].strength * (Consts.MUTATION_RELATIVE_STRENGTH_DIFF / 2) * Math.random();\n\t\t\t\tdiff *= (utilMath.randomChance(0.5) ? -1 : 1);\n\n\t\t\t\tlet newStrength = this.muscles[i].strength + diff;\n\t\t\t\tnewStrength = Math.max(newStrength, 0);\n\n\t\t\t\tthis.muscles[i].strength = newStrength;\n\t\t\t}\n\t\t}\n\n\t\t// Random muscle min len\n\t\tfor(let i: number = 0; i < this.muscles.length; ++i) {\n\t\t\tif(utilMath.randomChance(Consts.MUTATION_MUSCLE_MIN_LEN_CHANCE)) {\n\t\t\t\tlet diff: number = this.muscles[i].minLength * (Consts.MUTATION_MUSCLE_REALTIVE_LEN_DIFF / 2) * Math.random();\n\t\t\t\tdiff *= (utilMath.randomChance(0.5) ? -1 : 1);\n\n\t\t\t\tlet newMinLen = this.muscles[i].minLength + diff;\n\t\t\t\tnewMinLen = Math.max(newMinLen, 0);\n\n\t\t\t\tthis.muscles[i].minLength = newMinLen;\n\t\t\t\tif(this.muscles[i].minLength > this.muscles[i].maxLength) {\n\t\t\t\t\t[this.muscles[i].minLength, this.muscles[i].maxLength] = [this.muscles[i].maxLength, this.muscles[i].minLength];\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\t// Random muscle max len\n\t\tfor(let i: number = 0; i < this.muscles.length; ++i) {\n\t\t\tif(utilMath.randomChance(Consts.MUTATION_MUSCLE_MAX_LEN_CHANGE)) {\n\t\t\t\tlet diff: number = this.muscles[i].maxLength * (Consts.MUTATION_MUSCLE_REALTIVE_LEN_DIFF / 2) * Math.random();\n\t\t\t\tdiff *= (utilMath.randomChance(0.5) ? -1 : 1);\n\n\t\t\t\tlet newMaxLen = this.muscles[i].maxLength + diff;\n\t\t\t\tnewMaxLen = Math.max(0, newMaxLen);\n\n\t\t\t\tthis.muscles[i].maxLength = newMaxLen;\n\t\t\t\tif(this.muscles[i].minLength > this.muscles[i].maxLength) {\n\t\t\t\t\t[this.muscles[i].minLength, this.muscles[i].maxLength] = [this.muscles[i].maxLength, this.muscles[i].minLength];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tdiff(creature: Creature): number {\n\t\tif(this.bones.length != creature.bones.length || this.muscles.length != creature.muscles.length) {\n\t\t\treturn Infinity;\n\t\t}\n\n\t\tlet lhs = this.clone();\n\t\tlet rhs = creature.clone();\n\n\t\tlet boneComp = (lhs: CreatureBone, rhs: CreatureBone) => {\n\t\t\tif(lhs.position.x != rhs.position.x) {\n\t\t\t\treturn lhs.position.x < rhs.position.x ? -1 : lhs.position.x > rhs.position.x ? 1 : 0;\n\t\t\t} else {\n\t\t\t\treturn lhs.position.y < rhs.position.y ? -1 : lhs.position.y > rhs.position.y ? 1 : 0;\n\t\t\t}\n\t\t};\n\n\t\tlet muscleComp = (lhsMuscle: CreatureMuscle, rhsMuscle: CreatureMuscle) => {\n\t\t\tlet lhsIdx = [lhs.bones.indexOf(lhsMuscle.bone1), lhs.bones.indexOf(lhsMuscle.bone2)];\n\t\t\tlet rhsIdx = [rhs.bones.indexOf(rhsMuscle.bone1), rhs.bones.indexOf(rhsMuscle.bone2)];\n\n\t\t\tif(lhsIdx[0] > lhsIdx[1]) {[lhsIdx[0], lhsIdx[1]] = [lhsIdx[1], lhsIdx[0]]; }\n\t\t\tif(rhsIdx[0] > rhsIdx[1]) {[rhsIdx[0], rhsIdx[1]] = [rhsIdx[1], rhsIdx[0]]; }\n\t\t\n\t\t\tif(lhsIdx[0] != rhsIdx[0]) {\n\t\t\t\treturn lhsIdx[0] < rhsIdx[0] ? -1 : lhsIdx[0] > rhsIdx[0] ? 1 : 0;\n\t\t\t} else {\n\t\t\t\treturn lhsIdx[1] < rhsIdx[1] ? -1 : lhsIdx[1] > rhsIdx[1] ? 1 : 0;\n\t\t\t}\n\t\t};\n\n\t\tlhs.bones.sort(boneComp);\n\t\trhs.bones.sort(boneComp);\n\t\tlhs.muscles.sort(muscleComp);\n\t\trhs.muscles.sort(muscleComp);\n\n\t\tlet boneElasticityDiffAvg     = 0;\n\t\tlet boneFrictionDiffAvg       = 0;\n\t\tlet boneMassDiffAvg           = 0;\n\t\tlet bonePosDiffAvg            = 0;\n\t\tlet boneRadiusDiffAvg         = 0;\n\t\tlet diff                      = 0;\n\t\tlet muscleExpFactorAvgDiff    = 0;\n\t\tlet muscleIntervalTimeAvgDiff = 0;\n\t\tlet muscleMaxLenAvgDiff       = 0;\n\t\tlet muscleMinLenAvgDiff       = 0;\n\t\tlet muscleStrAvgDiff          = 0;\n\n\t\tfor (let i = 0; i < lhs.bones.length; ++i) {\n\t\t\tlet bone1 = lhs.bones[i];\n\t\t\tlet bone2 = rhs.bones[i];\n\n\t\t\tlet boneElasticityDiff = Math.abs(bone1.elasticity - bone2.elasticity);\n\t\t\tlet boneFrictionDiff   = Math.abs(bone1.friction - bone2.friction);\n\t\t\tlet boneMassDiff       = Math.abs(bone1.mass - bone2.mass);\n\t\t\tlet bonePosDiff        = new Vec2(bone1.position.x, bone1.position.y).distance(new Vec2(bone2.position.x, bone2.position.y));\n\t\t\tlet boneRadiusDiff     = Math.abs(bone1.radius - bone2.radius);\n\n\t\t\tif(boneElasticityDiff > Consts.CREATUREDIFF_BONE_ELASTICITY_DIFF_THRESHOLD) { diff += Consts.CREATUREDIFF_BONE_DIFF_POINTS; }\n\t\t\tif(boneFrictionDiff   > Consts.CREATUREDIFF_BONE_FRICTION_DIFF_THRESHOLD)   { diff += Consts.CREATUREDIFF_BONE_DIFF_POINTS; }\n\t\t\tif(boneMassDiff       > Consts.CREATUREDIFF_BONE_MASS_DIFF_THRESHOLD)       { diff += Consts.CREATUREDIFF_BONE_DIFF_POINTS; }\n\t\t\tif(bonePosDiff        > Consts.CREATUREDIFF_BONE_POS_DIFF_THRESHOLD)        { diff += Consts.CREATUREDIFF_BONE_DIFF_POINTS; }\n\t\t\tif(boneRadiusDiff     > Consts.CREATUREDIFF_BONE_RADIUS_DIFF_THRESHOLD)     { diff += Consts.CREATUREDIFF_BONE_DIFF_POINTS; }\n\n\t\t\tboneElasticityDiffAvg += boneElasticityDiff / lhs.bones.length;\n\t\t\tboneFrictionDiffAvg   += boneFrictionDiff   / lhs.bones.length;\n\t\t\tboneMassDiffAvg       += boneMassDiff       / lhs.bones.length;\n\t\t\tbonePosDiffAvg        += bonePosDiff        / lhs.bones.length;\n\t\t\tboneRadiusDiffAvg     += boneRadiusDiff     / lhs.bones.length;\n\t\t}\n\n\t\tfor(let i = 0; i < lhs.muscles.length; ++i) {\n\t\t\tlet muscle1 = lhs.muscles[i];\n\t\t\tlet muscle2 = rhs.muscles[i];\n\n\t\t\tlet muscle1Idx = [lhs.bones.indexOf(muscle1.bone1), lhs.bones.indexOf(muscle1.bone2)];\n\t\t\tlet muscle2Idx = [rhs.bones.indexOf(muscle2.bone1), rhs.bones.indexOf(muscle2.bone2)];\n\t\t\n\t\t\tif(muscle1Idx[0] > muscle1Idx[1]) {[muscle1Idx[0], muscle1Idx[1]] = [muscle1Idx[1], muscle1Idx[0]]; }\n\t\t\tif(muscle2Idx[0] > muscle2Idx[1]) {[muscle2Idx[0], muscle2Idx[1]] = [muscle2Idx[1], muscle2Idx[0]]; }\n\n\t\t\tif(muscle1Idx[0] != muscle2Idx[0] || muscle1Idx[1] != muscle2Idx[1]) {\n\t\t\t\tdiff += Consts.CREATUREDIFF_MUSCLE_BONES_DIFF_POINTS;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet muscleExpFactorDiff    = Math.abs(muscle1.expandFactor - muscle2.expandFactor);\n\t\t\tlet muscleIntervalTimeDiff = Math.abs(muscle1.timerInterval - muscle2.timerInterval);\n\t\t\tlet muscleMaxLenDiff       = Math.abs(muscle1.maxLength - muscle2.maxLength);\n\t\t\tlet muscleMinLenDiff       = Math.abs(muscle1.minLength - muscle2.minLength);\n\t\t\tlet muscleStrDiff          = Math.abs(muscle1.strength  - muscle2.strength);\n\n\t\t\tif(muscleExpFactorDiff    > Consts.CREATUREDIFF_MUSCLE_EXP_FACTOR_DIFF_THRESHOLD)    { diff += muscleExpFactorDiff /*Consts.CREATUREDIFF_MUSCLE_DIFF_POINTS*/; }\n\t\t\tif(muscleIntervalTimeDiff > Consts.CREATUREDIFF_MUSCLE_INTERVAL_TIME_DIFF_THRESHOLD) { diff += muscleIntervalTimeDiff /*Consts.CREATUREDIFF_MUSCLE_DIFF_POINTS*/; }\n\t\t\tif(muscleMaxLenDiff       > Consts.CREATUREDIFF_MUSCLE_MAX_LEN_DIFF_THRESHOLD)       { diff += muscleMaxLenDiff /*Consts.CREATUREDIFF_MUSCLE_DIFF_POINTS*/; }\n\t\t\tif(muscleMinLenDiff       > Consts.CREATUREDIFF_MUSCLE_MIN_LEN_DIFF_THRESHOLD)       { diff += muscleMinLenDiff /*Consts.CREATUREDIFF_MUSCLE_DIFF_POINTS*/; }\n\t\t\tif(muscleStrDiff          > Consts.CREATUREDIFF_MUSCLE_STR_DIFF_THRESHOLD)           { diff += muscleStrDiff /*Consts.CREATUREDIFF_MUSCLE_DIFF_POINTS*/; }\n\t\t\t\n\t\t\tmuscleExpFactorAvgDiff    += muscleExpFactorDiff    / lhs.muscles.length;\n\t\t\tmuscleIntervalTimeAvgDiff += muscleIntervalTimeDiff / lhs.muscles.length;\n\t\t\tmuscleMaxLenAvgDiff       += muscleMaxLenDiff       / lhs.muscles.length;\n\t\t\tmuscleMinLenAvgDiff       += muscleMinLenDiff       / lhs.muscles.length;\n\t\t\tmuscleStrAvgDiff          += muscleStrDiff          / lhs.muscles.length;\n\t\t}\n\n\t\tif(boneElasticityDiffAvg     > Consts.CREATUREDIFF_BONE_ELASTICITY_AVG_DIFF_THRESHOLD)      { diff += boneElasticityDiffAvg /*Consts.CREATUREDIFF_BONE_DIFF_POINTS*/;   }\n\t\tif(boneFrictionDiffAvg       > Consts.CREATUREDIFF_BONE_FRICTION_AVG_DIFF_THRESHOLD)        { diff += boneFrictionDiffAvg /*Consts.CREATUREDIFF_BONE_DIFF_POINTS*/;   }\n\t\tif(boneMassDiffAvg           > Consts.CREATUREDIFF_BONE_MASS_AVG_DIFF_THRESHOLD)            { diff += boneMassDiffAvg /*Consts.CREATUREDIFF_BONE_DIFF_POINTS*/;   }\n\t\tif(bonePosDiffAvg            > Consts.CREATUREDIFF_BONE_POS_AVG_DIFF_THRESHOLD)             { diff += bonePosDiffAvg /*Consts.CREATUREDIFF_BONE_DIFF_POINTS*/;   }\n\t\tif(boneRadiusDiffAvg         > Consts.CREATUREDIFF_BONE_RADIUS_AVG_DIFF_THRESHOLD)          { diff += boneRadiusDiffAvg /*Consts.CREATUREDIFF_BONE_DIFF_POINTS*/;   }\n\t\tif(muscleExpFactorAvgDiff    > Consts.CREATUREDIFF_MUSCLE_EXP_FACTOR_AVG_DIFF_THRESHOLD)    { diff += muscleExpFactorAvgDiff /*Consts.CREATUREDIFF_MUSCLE_DIFF_POINTS*/; }\n\t\tif(muscleIntervalTimeAvgDiff > Consts.CREATUREDIFF_MUSCLE_INTERVAL_TIME_AVG_DIFF_THRESHOLD) { diff += muscleIntervalTimeAvgDiff /*Consts.CREATUREDIFF_MUSCLE_DIFF_POINTS*/; }\n\t\tif(muscleMaxLenAvgDiff       > Consts.CREATUREDIFF_MUSCLE_MAX_LEN_AVG_DIFF_THRESHOLD)       { diff += muscleMaxLenAvgDiff /*Consts.CREATUREDIFF_MUSCLE_DIFF_POINTS*/; }\n\t\tif(muscleMinLenAvgDiff       > Consts.CREATUREDIFF_MUSCLE_MIN_LEN_AVG_DIFF_THRESHOLD)       { diff += muscleMinLenAvgDiff /*Consts.CREATUREDIFF_MUSCLE_DIFF_POINTS*/; }\n\t\tif(muscleStrAvgDiff          > Consts.CREATUREDIFF_MUSCLE_STR_AVG_DIFF_THRESHOLD)           { diff += muscleStrAvgDiff /*Consts.CREATUREDIFF_MUSCLE_DIFF_POINTS*/; }\n\n\n\t\t// console.log(minusPoints);\n\t\tdiff *= lhs.bones.length;\n\t\treturn diff > Consts.CREATUREDIFF_THRESHOLD ? Infinity : diff;\n\t}\n\n\tpublic minusPoints: number = 0;\n}\n\nexport class CreatureBone extends Entity {\n\tconstructor(\n\t\tposition: Vec2 = new Vec2(0, 0), public radius: number = 1,\n\t\t_mass: number = 1, _elasticity: number = 0.75, _friction: number = 0\n\t) {\n\t\tsuper(position, _mass, _elasticity, _friction);\n\t}\n\n\tbounding(): Intersections.Bounding {\n\t\treturn new Intersections.Circle(this.position, this.radius); // Circle\n\t}\n\n\trender(context: Context2D): void { // Temporarily removed stroke for better FPS\n\t\tlet color = bonePseudoGradient.get(this.friction);\n\t\tcontext.fillColor(color).strokeColor(Color.Black).lineWidth(4).drawCircle(\n\t\t\tthis.position.x, this.position.y, this.radius, true, false\n\t\t);\n\t}\n}\n\nexport class CreatureMuscle extends Entity {\n\ttargetLength: number; // current target length\n\ttimer: number = 0;\n\n\tconstructor(\n\t\tpublic bone1: CreatureBone,\n\t\tpublic bone2: CreatureBone,\n\t\tpublic minLength: number,\n\t\tpublic maxLength: number,\n\t\tpublic strength: number = 1,\n\t\tpublic timerInterval: number = 0.5,\n\t\tpublic expandFactor: number = 0.5\n\t) {\n\t\tsuper();\n\t\tthis.targetLength = maxLength;\n\t}\n\n\tmovable(): boolean { return false; }\n\n\tbonesDistance(): number {\n\t\treturn this.bone1.position.distance(this.bone2.position);\n\t}\n\n\taffect(affectedObjects: Simulable[]): void {\n\t\tlet forceDirection: Vec2 = this.bone1.position.sub(this.bone2.position).normal();\n\n\t\tthis.bone1.acceleration = this.bone1.acceleration.add(forceDirection.mul(this.strength * (this.targetLength - this.bonesDistance()) / this.bone1.mass));\n\t\tthis.bone2.acceleration = this.bone2.acceleration.add(forceDirection.mul(this.strength * (this.bonesDistance() - this.targetLength) / this.bone2.mass));\n\t}\n\n\trender(context: Context2D): void {\n\t\tcontext.strokeColor(Color.Black).lineWidth(15).drawLine(\n\t\t\tthis.bone1.position.x, this.bone1.position.y,\n\t\t\tthis.bone2.position.x, this.bone2.position.y, false, true\n\t\t);\n\t}\n\n\tupdate(timeDelta: number): void {\n\t\tthis.timer += timeDelta\n\t\tthis.timer %= this.timerInterval\n\n\t\tthis.targetLength = (this.timer > this.timerInterval * this.expandFactor ? this.minLength : this.maxLength);\n\t}\n}\n","import { Image } from \"../Image\"\n\nexport default class WebImage implements Image {\n\tpublic image: HTMLImageElement;\n\tprivate _loaded: boolean;\n\n\tconstructor(public source: string, onLoad?: (img: Image) => void) {\n\t\tthis.image = document.createElement(\"img\");\n\t\tthis._loaded = false;\n\n\t\tthis.image.addEventListener(\"load\", () => {\n\t\t\tthis._loaded = true;\n\t\t\tif (onLoad) { onLoad(this); }\n\t\t});\n\n\t\tthis.image.src = source;\n\t}\n\n\tisLoaded(): boolean {\n\t\treturn this._loaded;\n\t}\n\n\twidth(): number {\n\t\treturn this.image.naturalWidth;\n\t}\n\n\theight(): number {\n\t\treturn this.image.naturalHeight;\n\t}\n}\n","import Color from \"../../util/Color\"\nimport Vec2 from \"../../util/Vec2\"\nimport { Font } from \"../../util/Font\"\nimport TransformMatrix from \"../../util/TransformMatrix\"\nimport { LineCap, LineJoin, Context2D } from \"../Context2D\"\nimport { Image } from \"../Image\"\nimport WebImage from \"./WebImage\"\nimport { Gradient, LinearGradient, RadialGradient } from \"../Gradient\"\n\nexport default class CanvasContext2D extends Context2D {\n\tprotected currentTransform: TransformMatrix = new TransformMatrix(1, 0, 0, 0, 1, 0);\n\tprotected transformHistory = new Array<TransformMatrix>();\n\n\tconstructor(public ctx: CanvasRenderingContext2D) { super(); }\n\n\twidth(): number {\n\t\treturn this.ctx.canvas.width;\n\t}\n\theight(): number {\n\t\treturn this.ctx.canvas.height;\n\t}\n\n\tgetPixel(x: number, y: number): Color {\n\t\tlet d: ImageData = this.ctx.getImageData(x, y, 1, 1);\n\t\treturn new Color(d.data[0], d.data[1], d.data[2], d.data[3]);\n\t}\n\n\tclearRect(x: number, y: number, width: number, height: number): this {\n\t\tthis.ctx.clearRect(x, y, width, height); return this;\n\t}\n\n\tdrawRect(x: number, y: number, width: number, height: number, fill: boolean, stroke: boolean): this {\n\t\tif (fill) { this.ctx.fillRect(x, y, width, height); }\n\t\tif (stroke) { this.ctx.strokeRect(x, y, width, height); }\n\t\treturn this;\n\t}\n\tdrawPath(fill: boolean, stroke: boolean): this {\n\t\tif (fill) { this.ctx.fill(); }\n\t\tif (stroke) { this.ctx.stroke(); }\n\t\treturn this;\n\t}\n\tdrawText(x: number, y: number, text: string, baseline: string, fill: boolean, stroke: boolean): this {\n\t\tthis.ctx.textBaseline = baseline;\n\t\tif (fill) { this.ctx.fillText(text, x, y); }\n\t\tif (stroke) { this.ctx.strokeText(text, x, y); }\n\t\treturn this;\n\t}\n\n\tdrawImage(img: Image, x: number, y: number): this;\n\tdrawImage(img: Image, x: number, y: number, width: number, height: number): this;\n\tdrawImage(img: Image, x: number, y: number, width: number, height: number,\n\t\tsx: number, sy: number, sourceWidth: number, sourceHeight: number): this;\n\tdrawImage(img: Image, x: number, y: number, width?: number, height?: number,\n\t\tsx?: number, sy?: number, sourceWidth?: number, sourceHeight?: number): this {\n\n\t\tif (img instanceof WebImage) {\n\t\t\tif (sx && sy && sourceWidth && sourceHeight) {\n\t\t\t\tthis.ctx.drawImage(img.image, sx, sy, sourceWidth, sourceHeight, x, y, width, height);\n\t\t\t} else if (width && height) {\n\t\t\t\tthis.ctx.drawImage(img.image, x, y, width, height);\n\t\t\t} else {\n\t\t\t\tthis.ctx.drawImage(img.image, x, y);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow \"Unsupported image\";\n\t\t}\n\t\treturn this;\n\t}\n\n\tbeginPath(startX?: number, startY?: number): this {\n\t\tthis.ctx.beginPath();\n\t\tif (startX !== undefined && startY !== undefined) {\n\t\t\tthis.ctx.moveTo(startX, startY);\n\t\t}\n\t\treturn this;\n\t}\n\tclosePath(): this {\n\t\tthis.ctx.closePath(); return this;\n\t}\n\tmovePath(startX: number, startY: number): this {\n\t\tthis.ctx.moveTo(startX, startY); return this;\n\t}\n\n\tpathLine(endX: number, endY: number): this {\n\t\tthis.ctx.lineTo(endX, endY); return this;\n\t}\n\tpathBezier(cp1X: number, cp1Y: number, cp2X: number, cp2Y: number, endX: number, endY: number): this {\n\t\tthis.ctx.bezierCurveTo(cp1X, cp1Y, cp2X, cp2Y, endX, endY); return this;\n\t}\n\tpathQuadratic(cpX: number, cpY: number, endX: number, endY: number): this {\n\t\tthis.ctx.quadraticCurveTo(cpX, cpY, endX, endY); return this;\n\t}\n\tpathArc(centerX: number, centerY: number, radius: number, startAngle: number, endAngle: number, antiClockwise: boolean = false): this {\n\t\tthis.ctx.arc(centerX, centerY, radius, startAngle, endAngle, antiClockwise); return this;\n\t}\n\tpathArcByControlPoints(x1: number, y1: number, x2: number, y2: number, radius: number): this {\n\t\tthis.ctx.arcTo(x1, y1, x2, y2, radius); return this;\n\t}\n\n\tlineWidth(): number;\n\tlineWidth(val: number): this;\n\tlineWidth(val?: number): any {\n\t\tif (val) {\n\t\t\tthis.ctx.lineWidth = val; return this;\n\t\t}\n\t\treturn this.ctx.lineWidth;\n\t}\n\n\tlineCap(): LineCap;\n\tlineCap(val: LineCap): this;\n\tlineCap(val?: LineCap): any {\n\t\tif (val) {\n\t\t\tthis.ctx.lineCap = val; return this;\n\t\t}\n\t\treturn this.ctx.lineCap;\n\t}\n\n\tlineJoin(): LineJoin;\n\tlineJoin(val: LineJoin): this;\n\tlineJoin(val?: LineJoin): any {\n\t\tif (val) {\n\t\t\tthis.ctx.lineJoin = val; return this;\n\t\t}\n\t\treturn this.ctx.lineJoin;\n\t}\n\n\tfillColor(): Color;\n\tfillColor(color: Color): this;\n\tfillColor(color?: Color): any {\n\t\tif (color) {\n\t\t\tthis.ctx.fillStyle = color.toString(); return this;\n\t\t}\n\t\tif (typeof this.ctx.fillStyle === \"string\") {\n\t\t\treturn Color.fromString(<string>this.ctx.fillStyle);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tstrokeColor(): Color;\n\tstrokeColor(color: Color): this;\n\tstrokeColor(color?: Color): any {\n\t\tif (color) {\n\t\t\tthis.ctx.strokeStyle = color.toString(); return this;\n\t\t}\n\t\tif (typeof this.ctx.strokeStyle === \"string\") {\n\t\t\treturn Color.fromString(<string>this.ctx.strokeStyle);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tfillGradient(val: Gradient): this {\n\t\tthis.ctx.fillStyle = this.toCanvasGradient(val);\n\t\treturn this;\n\t}\n\tstrokeGradient(val: Gradient): this {\n\t\tthis.ctx.strokeStyle = this.toCanvasGradient(val);\n\t\treturn this;\n\t}\n\n\tprivate toCanvasGradient(val: Gradient): CanvasGradient {\n\t\tlet gradient: CanvasGradient;\n\n\t\tif (val instanceof LinearGradient) {\n\t\t\tgradient = this.ctx.createLinearGradient(val.startPoint.x, val.startPoint.y, val.endPoint.x, val.endPoint.y);\n\t\t} else if (val instanceof RadialGradient) {\n\t\t\tgradient = this.ctx.createRadialGradient(\n\t\t\t\tval.startCenter.x, val.startCenter.y, val.startRadius,\n\t\t\t\tval.endCenter.x, val.endCenter.y, val.endRadius\n\t\t\t);\n\t\t} else {\n\t\t\tthrow \"Unsupported gradient type\";\n\t\t}\n\n\t\tfor (let stop of val.stops) {\n\t\t\tgradient.addColorStop(stop.offset, stop.color.toString());\n\t\t}\n\t\treturn gradient;\n\t}\n\n\tshadowBlur(): number;\n\tshadowBlur(level: number): this;\n\tshadowBlur(level?: number): any {\n\t\tif (level) {\n\t\t\tthis.ctx.shadowBlur = level; return this;\n\t\t}\n\t\treturn this.ctx.shadowBlur;\n\t}\n\n\tshadowColor(): Color;\n\tshadowColor(color: Color): this;\n\tshadowColor(color?: Color): any {\n\t\tif (color) {\n\t\t\tthis.ctx.shadowColor = color.toString(); return this;\n\t\t}\n\t\treturn Color.fromString(this.ctx.shadowColor);\n\t}\n\n\tshadowOffset(): Vec2;\n\tshadowOffset(x: number, y: number): this;\n\tshadowOffset(x?: number, y?: number): any {\n\t\tif (x && y) {\n\t\t\tthis.ctx.shadowOffsetX = x;\n\t\t\tthis.ctx.shadowOffsetY = y;\n\t\t\treturn this;\n\t\t}\n\t\treturn new Vec2(this.ctx.shadowOffsetX, this.ctx.shadowOffsetY);\n\t}\n\n\tfont(): Font;\n\tfont(font: Font): this;\n\tfont(font?: Font): any {\n\t\tif (font) {\n\t\t\tthis.ctx.font = font.toString(); return this;\n\t\t}\n\t\treturn Font.fromString(this.ctx.font);\n\t}\n\n\talpha(): number;\n\talpha(val: number): this;\n\talpha(val?: number): any {\n\t\tif (val) {\n\t\t\tthis.ctx.globalAlpha = val; return this;\n\t\t}\n\t\treturn this.ctx.globalAlpha;\n\t}\n\n\tprotected onTransformChanged() {\n\t\tlet m = this.currentTransform;\n\t\tthis.ctx.setTransform(m[0][0], m[1][0], m[0][1], m[1][1], m[0][2], m[1][2]);\n\t}\n\n\ttransformMatrix(): TransformMatrix;\n\ttransformMatrix(val: TransformMatrix): this;\n\ttransformMatrix(val?: TransformMatrix): this | TransformMatrix {\n\t\tif (val) {\n\t\t\tthis.currentTransform = val.clone();\n\t\t\tthis.onTransformChanged();\n\t\t\treturn this;\n\t\t}\n\t\treturn this.currentTransform.clone();\n\t}\n\n\ttransform(val: TransformMatrix): this {\n\t\tthis.currentTransform = this.currentTransform.mul(val);\n\t\tthis.onTransformChanged();\n\t\treturn this;\n\t}\n\n\tsave(): this {\n\t\tthis.transformHistory.push(this.currentTransform);\n\t\tthis.ctx.save();\n\t\treturn this;\n\t}\n\n\trestore(): this {\n\t\tthis.ctx.restore();\n\t\tthis.transformMatrix(this.transformHistory.pop());\n\t\treturn this;\n\t}\n}\n","import { LineCap, LineJoin, TextBaseline, EventType, Context2D } from \"./Context2D\"\nimport Color from \"../util/Color\"\nimport Vec2 from \"../util/Vec2\"\nimport { Font } from \"../util/Font\"\nimport TransformMatrix from \"../util/TransformMatrix\"\nimport { Image } from \"./Image\"\nimport { Gradient } from \"./Gradient\"\n\nclass EventListEntry {\n\tconstructor(\n\t\tpublic upper: number,\n\t\tpublic type: EventType,\n\t\tpublic callback: (data?: any) => void\n\t) { }\n};\n\nexport class InteractiveContext2D extends Context2D {\n\tprivate maxEventIndex = 15 + 15*16 + 15*256;\n\n\tprivate eventList: Array<EventListEntry> = new Array<EventListEntry>();\n\tprivate topEvent: number = this.maxEventIndex;\n\tprivate eventCount: number = 0;\n\tprivate lastMouseOverIndex: number = this.maxEventIndex;\n\tprivate lastMouseDownIndex: number = this.maxEventIndex;\n\tprotected topEventHistory = new Array<number>();\n\n\tconstructor(public drawCtx: Context2D, public eventCtx: Context2D) {\n\t\tsuper();\n\t\tthis.updateEventColor();\n\t}\n\n\tprivate updateEventColor() {\n\t\tlet col = this.indexToColor(this.topEvent);\n\t\tthis.eventCtx.fillColor(col).strokeColor(col);\n\t}\n\n\tprivate indexToColor(index: number): Color {\n\t\tlet r = ((index & 0xF) << 4) + 8;\n\t\tlet g = (((index >> 4) & 0xF) << 4) + 8;\n\t\tlet b = (((index >> 8) & 0xF) << 4) + 8;\n\t\treturn new Color(r, g, b);\n\t}\n\n\tprivate indexFromColor(color: Color): number {\n\t\treturn (color.r >> 4) + ((color.g >> 4) << 4) + ((color.b >> 4) << 8);\n\t}\n\n\tbindEvent(type: EventType, callback: (data?: any) => void): this {\n\t\tthis.eventList[this.eventCount++] = new EventListEntry(this.topEvent, type, callback);\n\n\t\tif (this.eventCount >= this.maxEventIndex) {\n\t\t\tthrow \"Event index overflow\";\n\t\t}\n\n\t\tthis.topEvent = this.eventCount - 1;\n\t\tthis.updateEventColor();\n\n\t\treturn this;\n\t}\n\n\tpopEvent(count?: number): this {\n\t\tif (typeof count == \"undefined\") {\n\t\t\tcount = 1;\n\t\t}\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tthis.topEvent = this.eventList[this.topEvent].upper;\n\t\t\tthis.updateEventColor();\n\t\t}\n\t\treturn this;\n\t}\n\n\treset(): this {\n\t\tthis.eventCount = 0;\n\t\tthis.topEvent = this.maxEventIndex;\n\n\t\tthis.topEventHistory = new Array<number>();\n\t\tthis.drawCtx.reset();\n\t\tthis.updateEventColor();\n\t\tthis.eventCtx.resetTransform().drawRect(0, 0, this.width(), this.height(), true, false);\n\t\treturn this;\n\t}\n\n\tcallEvent(type: EventType, x: number, y: number, data?: any): this {\n\t\tlet index = this.indexFromColor(this.eventCtx.getPixel(x, y));\n\n\t\tif (type == EventType.MouseMove) {\n\t\t\tlet lastIndex = this.lastMouseOverIndex;\n\t\t\tthis.lastMouseOverIndex = index;\n\n\t\t\tif (lastIndex != index) {\n\t\t\t\tthis.callEventIndex(EventType.MouseLeave, lastIndex, data);\n\t\t\t\tthis.callEventIndex(EventType.MouseEnter, index, data);\n\t\t\t}\n\t\t} else if (type == EventType.MouseUp) {\n\t\t\tif (this.lastMouseDownIndex == index) {\n\t\t\t\tthis.callEventIndex(EventType.Click, index, data);\n\t\t\t}\n\t\t} else if (type == EventType.MouseDown) {\n\t\t\tthis.lastMouseDownIndex = index;\n\t\t}\n\n\t\tthis.callEventIndex(type, index, data);\n\t\treturn this;\n\t}\n\n\tprivate callEventIndex(type: EventType, index: number, data?: any) {\n\t\twhile (index >= 0 && index < this.eventCount) {\n\t\t\tlet cur = this.eventList[index];\n\t\t\tif (cur.type == type) {\n\t\t\t\tcur.callback(data);\n\t\t\t}\n\t\t\tindex = cur.upper;\n\t\t}\n\t}\n\n\n\twidth(): number {\n\t\treturn this.drawCtx.width();\n\t}\n\theight(): number {\n\t\treturn this.drawCtx.height();\n\t}\n\n\tgetPixel(x: number, y: number): Color {\n\t\treturn this.drawCtx.getPixel(x, y);\n\t}\n\n\tclearRect(x: number, y: number, width: number, height: number): this {\n\t\tthis.drawCtx.clearRect(x, y, width, height);\n\t\tthis.eventCtx.drawRect(x, y, width, height, true, false);\n\t\treturn this;\n\t}\n\n\tdrawRect(x: number, y: number, width: number, height: number, fill: boolean, stroke: boolean): this {\n\t\tthis.drawCtx.drawRect(x, y, width, height, fill, stroke);\n\t\tthis.eventCtx.drawRect(x, y, width, height, fill, stroke);\n\t\treturn this;\n\t}\n\tdrawPath(fill: boolean, stroke: boolean): this {\n\t\tthis.drawCtx.drawPath(fill, stroke);\n\t\tthis.eventCtx.drawPath(fill, stroke);\n\t\treturn this;\n\t}\n\tdrawText(x: number, y: number, text: string, baseline: string, fill: boolean, stroke: boolean): this {\n\t\tthis.drawCtx.drawText(x, y, text, baseline, fill, stroke);\n\t\tthis.eventCtx.drawText(x, y, text, baseline, true, false);\n\t\treturn this;\n\t}\n\n\tdrawImage(img: Image, x: number, y: number): this;\n\tdrawImage(img: Image, x: number, y: number, width: number, height: number): this;\n\tdrawImage(img: Image, x: number, y: number, width: number, height: number,\n\t\tsx: number, sy: number, sourceWidth: number, sourceHeight: number): this;\n\tdrawImage(img: Image, x: number, y: number, width?: number, height?: number,\n\t\tsx?: number, sy?: number, sourceWidth?: number, sourceHeight?: number): this {\n\n\t\tthis.drawCtx.drawImage(img, x, y, width, height, sx, sy, sourceWidth, sourceHeight);\n\n\t\tif (!width) {\n\t\t\twidth = img.width();\n\t\t}\n\t\tif (!height) {\n\t\t\theight = img.height();\n\t\t}\n\t\tthis.eventCtx.drawRect(x, y, width, height, true, false);\n\t\treturn this;\n\t}\n\n\tbeginPath(startX?: number, startY?: number): this {\n\t\tthis.drawCtx.beginPath(startX, startY);\n\t\tthis.eventCtx.beginPath(startX, startY);\n\t\treturn this;\n\t}\n\tclosePath(): this {\n\t\tthis.drawCtx.closePath();\n\t\tthis.eventCtx.closePath();\n\t\treturn this;\n\t}\n\tmovePath(startX: number, startY: number): this {\n\t\tthis.drawCtx.movePath(startX, startY);\n\t\tthis.eventCtx.movePath(startX, startY);\n\t\treturn this;\n\t}\n\n\tpathLine(endX: number, endY: number): this {\n\t\tthis.drawCtx.pathLine(endX, endY);\n\t\tthis.eventCtx.pathLine(endX, endY);\n\t\treturn this;\n\t}\n\tpathBezier(cp1X: number, cp1Y: number, cp2X: number, cp2Y: number, endX: number, endY: number): this {\n\t\tthis.drawCtx.pathBezier(cp1X, cp1Y, cp2X, cp2Y, endX, endY);\n\t\tthis.eventCtx.pathBezier(cp1X, cp1Y, cp2X, cp2Y, endX, endY);\n\t\treturn this;\n\t}\n\tpathQuadratic(cpX: number, cpY: number, endX: number, endY: number): this {\n\t\tthis.drawCtx.pathQuadratic(cpX, cpY, endX, endY);\n\t\tthis.eventCtx.pathQuadratic(cpX, cpY, endX, endY);\n\t\treturn this;\n\t}\n\tpathArc(centerX: number, centerY: number, radius: number, startAngle: number, endAngle: number, antiClockwise: boolean = false): this {\n\t\tthis.drawCtx.pathArc(centerX, centerY, radius, startAngle, endAngle, antiClockwise);\n\t\tthis.eventCtx.pathArc(centerX, centerY, radius, startAngle, endAngle, antiClockwise);\n\t\treturn this;\n\t}\n\tpathArcByControlPoints(x1: number, y1: number, x2: number, y2: number, radius: number): this {\n\t\tthis.drawCtx.pathArcByControlPoints(x1, y1, x2, y2, radius);\n\t\tthis.eventCtx.pathArcByControlPoints(x1, y1, x2, y2, radius);\n\t\treturn this;\n\t}\n\n\tlineWidth(): number;\n\tlineWidth(val: number): this;\n\tlineWidth(val?: number): any {\n\t\tif (val) {\n\t\t\tthis.drawCtx.lineWidth(val);\n\t\t\tthis.eventCtx.lineWidth(val);\n\t\t\treturn this;\n\t\t}\n\t\treturn this.drawCtx.lineWidth();\n\t}\n\n\tlineCap(): LineCap;\n\tlineCap(val: LineCap): this;\n\tlineCap(val?: LineCap): any {\n\t\tif (val) {\n\t\t\tthis.drawCtx.lineCap(val);\n\t\t\tthis.eventCtx.lineCap(val);\n\t\t\treturn this;\n\t\t}\n\t\treturn this.drawCtx.lineCap();\n\t}\n\n\tlineJoin(): LineJoin;\n\tlineJoin(val: LineJoin): this;\n\tlineJoin(val?: LineJoin): any {\n\t\tif (val) {\n\t\t\tthis.drawCtx.lineJoin(val);\n\t\t\tthis.eventCtx.lineJoin(val);\n\t\t\treturn this;\n\t\t}\n\t\treturn this.drawCtx.lineJoin();\n\t}\n\n\tfillColor(): Color;\n\tfillColor(val: Color): this;\n\tfillColor(val?: Color): any {\n\t\tif (val) {\n\t\t\tthis.drawCtx.fillColor(val);\n\t\t\treturn this;\n\t\t}\n\t\treturn this.drawCtx.fillColor();\n\t}\n\n\tstrokeColor(): Color;\n\tstrokeColor(val: Color): this;\n\tstrokeColor(val?: Color): any {\n\t\tif (val) {\n\t\t\tthis.drawCtx.strokeColor(val);\n\t\t\treturn this;\n\t\t}\n\t\treturn this.drawCtx.strokeColor();\n\t}\n\n\tfillGradient(val: Gradient): this {\n\t\tthis.drawCtx.fillGradient(val);\n\t\treturn this;\n\t}\n\tstrokeGradient(val: Gradient): this {\n\t\tthis.drawCtx.strokeGradient(val);\n\t\treturn this;\n\t}\n\n\tshadowBlur(): number;\n\tshadowBlur(val: number): this;\n\tshadowBlur(val?: number): any {\n\t\tif (val) {\n\t\t\tthis.drawCtx.shadowBlur(val);\n\t\t\treturn this;\n\t\t}\n\t\treturn this.drawCtx.shadowBlur();\n\t}\n\n\tshadowColor(): Color;\n\tshadowColor(val: Color): this;\n\tshadowColor(val?: Color): any {\n\t\tif (val) {\n\t\t\tthis.drawCtx.shadowColor(val);\n\t\t\treturn this;\n\t\t}\n\t\treturn this.drawCtx.shadowColor();\n\t}\n\n\tshadowOffset(): Vec2;\n\tshadowOffset(x: number, y: number): this;\n\tshadowOffset(x?: number, y?: number): any {\n\t\tif (x && y) {\n\t\t\tthis.drawCtx.shadowOffset(x, y);\n\t\t\treturn this;\n\t\t}\n\t\treturn this.drawCtx.shadowOffset();\n\t}\n\n\tfont(): Font;\n\tfont(val: Font): this;\n\tfont(val?: Font): any {\n\t\tif (val) {\n\t\t\tthis.drawCtx.font(val);\n\t\t\tthis.eventCtx.font(val);\n\t\t\treturn this;\n\t\t}\n\t\treturn this.drawCtx.font();\n\t}\n\n\talpha(): number;\n\talpha(val: number): this;\n\talpha(val?: number): any {\n\t\tif (val) {\n\t\t\tthis.drawCtx.alpha(val);\n\t\t\treturn this;\n\t\t}\n\t\treturn this.drawCtx.alpha();\n\t}\n\n\ttransformMatrix(): TransformMatrix;\n\ttransformMatrix(val: TransformMatrix): this;\n\ttransformMatrix(val?: TransformMatrix): this | TransformMatrix {\n\t\tif (val) {\n\t\t\tthis.drawCtx.transformMatrix(val);\n\t\t\tthis.eventCtx.transformMatrix(val);\n\t\t\treturn this;\n\t\t}\n\t\treturn this.drawCtx.transformMatrix();\n\t}\n\n\ttransform(val: TransformMatrix): this {\n\t\tthis.drawCtx.transform(val);\n\t\tthis.eventCtx.transform(val);\n\t\treturn this;\n\t}\n\n\tsave(): this {\n\t\tthis.topEventHistory.push(this.topEvent);\n\t\tthis.drawCtx.save();\n\t\tthis.eventCtx.save();\n\t\treturn this;\n\t}\n\n\trestore(): this {\n\t\tthis.topEvent = this.topEventHistory.pop();\n\t\tthis.updateEventColor();\n\n\t\tthis.drawCtx.restore();\n\t\tthis.eventCtx.restore();\n\t\treturn this;\n\t}\n}\n","import { EventType } from \"../Context2D\"\nimport CanvasContext2D from \"./CanvasContext2D\"\nimport { InteractiveContext2D } from \"../InteractiveContext2D\"\n\nfunction makeFullCanvas(wnd: Window, zIndex: string = \"10\"): HTMLCanvasElement {\n\tlet canvas = wnd.document.createElement(\"canvas\");\n\twnd.document.body.appendChild(canvas);\n\n\tcanvas.style.position = \"fixed\";\n\tcanvas.style.left = \"0px\";\n\tcanvas.style.top = \"0px\";\n\tcanvas.style.width = \"100%\";\n\tcanvas.style.height = \"100%\";\n\tcanvas.style.zIndex = zIndex;\n\treturn canvas;\n}\n\nexport class CanvasWindow {\n\tpublic canvas: HTMLCanvasElement;\n\tpublic context: CanvasContext2D;\n\n\tconstructor(public hostWindow: Window = window, protected resolution: number = 1) {\n\t\tthis.canvas = makeFullCanvas(this.hostWindow);\n\n\t\tthis.hostWindow.addEventListener(\"resize\", () => this.onResize());\n\t\tthis.onResize();\n\n\t\tthis.context = new CanvasContext2D(this.canvas.getContext(\"2d\"));\n\t}\n\n\tprotected onResize() {\n\t\tthis.canvas.width = this.hostWindow.innerWidth * this.resolution;\n\t\tthis.canvas.height = this.hostWindow.innerHeight * this.resolution;\n\t}\n\n\twidth(): number { return this.canvas.width; }\n\theight(): number { return this.canvas.height; }\n}\n\nexport class InteractiveCanvasWindow {\n\tpublic drawCanvas: HTMLCanvasElement;\n\tpublic eventCanvas: HTMLCanvasElement;\n\tpublic context: InteractiveContext2D;\n\n\tconstructor(public hostWindow: Window = window, protected resolution: number = 1, debugClickmap: boolean = false) {\n\t\tif (debugClickmap) {\n\t\t\tthis.drawCanvas = hostWindow.document.createElement(\"canvas\");\n\t\t\tthis.eventCanvas = makeFullCanvas(this.hostWindow, \"10\");\n\t\t} else {\n\t\t\tthis.eventCanvas = hostWindow.document.createElement(\"canvas\");\n\t\t\tthis.drawCanvas = makeFullCanvas(this.hostWindow, \"10\");\n\t\t}\n\n\t\tthis.hostWindow.addEventListener(\"resize\", () => this.onResize());\n\t\tthis.hostWindow.addEventListener(\"mousedown\", (evt) => this.onMouseDown(evt));\n\t\tthis.hostWindow.addEventListener(\"mouseup\", (evt) => this.onMouseUp(evt));\n\t\tthis.hostWindow.addEventListener(\"mousemove\", (evt) => this.onMouseMove(evt));\n\t\tthis.onResize();\n\n\t\tthis.context = new InteractiveContext2D(\n\t\t\tnew CanvasContext2D(this.drawCanvas.getContext(\"2d\")),\n\t\t\tnew CanvasContext2D(this.eventCanvas.getContext(\"2d\"))\n\t\t);\n\t}\n\n\tprotected onResize() {\n\t\tthis.drawCanvas.width = this.eventCanvas.width = this.hostWindow.innerWidth * this.resolution;\n\t\tthis.drawCanvas.height = this.eventCanvas.height = this.hostWindow.innerHeight * this.resolution;\n\t}\n\n\tprotected onMouseDown(evt: any) {\n\t\tthis.callEvent(EventType.MouseDown, evt.clientX, evt.clientY, evt);\n\t}\n\tprotected onMouseUp(evt: any) {\n\t\tthis.callEvent(EventType.MouseUp, evt.clientX, evt.clientY, evt);\n\t}\n\tprotected onMouseMove(evt: any) {\n\t\tthis.callEvent(EventType.MouseMove, evt.clientX, evt.clientY, evt);\n\t}\n\n\tprotected callEvent(type: EventType, x: number, y: number, data?: any) {\n\t\tthis.context.callEvent(type, x * this.resolution, y * this.resolution, data);\n\t}\n\n\twidth(): number { return this.drawCanvas.width; }\n\theight(): number { return this.drawCanvas.height; }\n}\n","import { Context2D } from \"./Context2D\"\nimport { Renderable } from \"./Renderable\"\nimport Color from \"../util/Color\"\nimport { Font } from \"../util/Font\"\nimport * as Arrays from \"../util/Arrays\"\n\nexport default class Renderer {\n    private frameRequestID: number;\n    private fpsCounter = new FpsCounter(10);\n\n    constructor(public context: Context2D, public item: Renderable, public drawFps: boolean = false) { }\n\n    protected renderLoop() {\n        this.context.reset();\n\n        if (this.item) {\n            this.context.save();\n            this.item.render(this.context);\n            this.context.restore();\n        }\n\n        this.fpsCounter.countTick();\n        if (this.drawFps) {\n            this.context.fillColor(Color.Black).font(new Font(\"Courier New\", 14));\n            this.context.drawText(5, 5, this.averageFps() + \" fps\", \"hanging\", true, false);\n        }\n\n        this.start(); // request next frame\n    }\n\n    start() {\n        this.frameRequestID = requestAnimationFrame(() => this.renderLoop());\n    }\n    stop() {\n        cancelAnimationFrame(this.frameRequestID);\n    }\n\n    averageFps(): number {\n        return this.fpsCounter.fps();\n    }\n}\n\nclass FpsCounter {\n    private times: number[];\n    private pos = 0;\n    private sum = 0;\n    private lastTime = Date.now();\n\n    constructor(samples: number) {\n        this.times = Arrays.fillArray(new Array<number>(samples), 0, samples, 0);\n    }\n\n    countTick() {\n        let now = Date.now();\n        let diff = now - this.lastTime;\n        this.lastTime = now;\n\n        this.sum += diff - this.times[this.pos];\n        this.times[this.pos] = diff;\n        this.pos = (this.pos + 1) % this.times.length;\n    }\n\n    fps(): number {\n        return Math.round(this.times.length * 1000 / this.sum);\n    }\n}\n","import { Renderable } from \"../graphics/Renderable\"\n\nexport interface View extends Renderable {\n\tonShow(): void;\n\tonHide(): void;\n}\n","import TransformMatrix from \"../../util/TransformMatrix\"\nimport Vec2 from \"../../util/Vec2\"\nimport { Context2D } from \"../Context2D\"\n\nexport function alignTranslate(ctx: Context2D, x: number, y: number, width: number, height: number): Vec2 {\n\tif (width < 0) {\n\t\twidth += ctx.width();\n\t}\n\tif (height < 0) {\n\t\theight += ctx.height();\n\t}\n\tif (x < 0) {\n\t\tx += ctx.width() - width;\n\t}\n\tif (y < 0) {\n\t\ty += ctx.height() - height;\n\t}\n\tctx.translate(x, y);\n\treturn new Vec2(width, height);\n}\n","import { Renderable } from \"../Renderable\"\nimport { Context2D, EventType } from \"../Context2D\"\nimport Color from \"../../util/Color\"\nimport { Font } from \"../../util/Font\"\nimport * as GuiUtil from \"./Util\"\n\nexport default class Button implements Renderable {\n\tconstructor(\n\t\tpublic text: string,\n\t\tpublic callback: () => void,\n\t\tpublic x: number,\n\t\tpublic y: number,\n\t\tpublic width: number = 100,\n\t\tpublic height: number = 25,\n\t\tpublic font: Font = new Font(\"Arial\", 25),\n\t\tpublic fill: Color = new Color(0x34, 0x98, 0xdb),\n\t\tpublic stroke: Color = new Color(0x29, 0x80, 0xb9),\n\t\tpublic fillOver: Color = new Color(0x3c, 0xa0, 0xe6),\n\t\tpublic strokeOver: Color = new Color(0x29, 0x80, 0xb9),\n\t\tpublic fillDown: Color = new Color(0x29, 0x80, 0xb9),\n\t\tpublic strokeDown: Color = new Color(0x34, 0x98, 0xdb)\n\t) { }\n\n\tprivate over: boolean;\n\tprivate down: boolean;\n\n\trender(ctx: Context2D) {\n\t\tctx.save();\n\t\tif (this.callback) {\n\t\t\tctx.bindEvent(EventType.Click, this.callback);\n\t\t}\n\t\t\n\t\tctx.bindEvent(EventType.MouseDown, () => this.down = true);\n\t\tctx.bindEvent(EventType.MouseUp, () => this.down = false);\n\t\tctx.bindEvent(EventType.MouseEnter, () => this.over = true);\n\t\tctx.bindEvent(EventType.MouseLeave, () => this.over = this.down = false);\n\n\t\tif (this.down) {\n\t\t\tctx.fillColor(this.fillDown).strokeColor(this.strokeDown);\n\t\t} else if (this.over) {\n\t\t\tctx.fillColor(this.fillOver).strokeColor(this.strokeOver);\n\t\t} else {\n\t\t\tctx.fillColor(this.fill).strokeColor(this.stroke);\n\t\t}\n\n\t\tlet bounds = GuiUtil.alignTranslate(ctx, this.x, this.y, this.width, this.height);\n\n\t\tctx.lineWidth(2);\n\t\tctx.drawRect(0, 0, bounds.x, bounds.y, true, true);\n\n\t\tctx.fillColor(Color.White).strokeColor(Color.Black).font(this.font);\n\t\tctx.drawText(15, bounds.y / 2, this.text, \"middle\", true, false);\n\n\t\tctx.restore();\n\t}\n}\n","import { Renderable } from \"../Renderable\"\nimport { Context2D, TextBaseline } from \"../Context2D\"\nimport Color from \"../../util/Color\"\nimport { Font } from \"../../util/Font\"\nimport * as GuiUtil from \"./Util\"\n\nexport default class Text implements Renderable {\n\tconstructor(\n\t\tpublic text: string,\n\t\tpublic x: number,\n\t\tpublic y: number,\n\t\tpublic baseline: TextBaseline,\n\t\tpublic font: Font = new Font(\"Arial\", 30),\n\t\tpublic fill: Color = Color.White,\n\t\tpublic stroke: Color = Color.Black\n\t) { }\n\n\trender(ctx: Context2D) {\n\t\tctx.save();\n\n\t\tGuiUtil.alignTranslate(ctx, this.x, this.y, 0, 0);\n\n\t\tctx.fillColor(this.fill).strokeColor(this.stroke).lineWidth(2).font(this.font);\n\t\tctx.drawText(0, 0, this.text, this.baseline, true, true);\n\n\t\tctx.restore();\n\t}\n}\n","import { RenderGroup, RenderTransform } from \"../graphics/Renderable\"\nimport Button from \"../graphics/gui/Button\"\nimport Text from \"../graphics/gui/Text\"\nimport { Context2D } from \"../graphics/Context2D\"\nimport TransformMatrix from \"../util/TransformMatrix\"\nimport { Font, FontWeight } from \"../util/Font\"\nimport { Scene } from \"../core/Scene\"\nimport { Air, Ground } from \"../core/Entity\"\nimport WebImage from \"../graphics/browser/WebImage\"\nimport { Creature } from \"../core/Creature\"\nimport { CreatureBone } from \"../core/Creature\"\nimport Population from \"../core/Population\"\nimport * as Consts from \"../core/Consts\"\nimport * as CoreUtil from \"../core/Util\"\nimport MainView from \"./MainView\"\nimport { View } from \"./View\"\n\nexport default class SimulationView extends RenderGroup implements View {\n\tprivate goBackBtn = new Button(\"x\", () => this.mainView.show(this.mainView.populationView), -579, -7, 45, 50);\n\tprivate prevCreatureBtn = new Button(\"<\", () => this.prevCreature(), -527, -7, 45, 50);\n\tprivate nextCreatureBtn = new Button(\">\", () => this.nextCreature(), -475, -7, 45, 50);\n\tprivate skipPopulationBtn = new Button(\"Next generation\", () => this.skipGenerations(1), -265, -7, 202, 50);\n\tprivate skip10PopulationsBtn = new Button(\"Skip 10 generations\", () => this.skipGenerations(10), -7, -7, 250, 50);\n\n\tprivate populationTxt = new Text(\"\", 15, -30, \"middle\", new Font(\"Arial\", 30, \"normal\", FontWeight.Bold));\n\tprivate creatureTxt = new Text(\"\", 290, -30, \"middle\", new Font(\"Arial\", 30, \"normal\", FontWeight.Bold));\n\tprivate resultTxt = new Text(\"\", 500, -30, \"middle\", new Font(\"Arial\", 30, \"normal\", FontWeight.Bold));\n\n\tscene: Scene = CoreUtil.creatureScene();\n\tcamera: RenderTransform;\n\n\tcreatureId: number = 0;\n\tcreatureClone: Creature;\n\n\tticks: number = 0;\n\tspeed: number = 1;\n\tintervalId: number;\n\n\tconstructor(public mainView: MainView) {\n\t\tsuper();\n\n\t\tthis.camera = new RenderTransform(new TransformMatrix(), this.scene);\n\n\t\tthis.items.push(this.camera);\n\t\tthis.items.push(this.populationTxt);\n\t\tthis.items.push(this.creatureTxt);\n\t\tthis.items.push(this.resultTxt);\n\t\tthis.items.push(this.skipPopulationBtn);\n\t\tthis.items.push(this.skip10PopulationsBtn);\n\t\tthis.items.push(this.goBackBtn);\n\t\tthis.items.push(this.prevCreatureBtn);\n\t\tthis.items.push(this.nextCreatureBtn);\n\n\t\tthis.creatureClone = this.mainView.population.population[this.creatureId].clone();\n\t\tthis.scene.addEntity(this.creatureClone);\n\t}\n\n\tonShow(): void {\n\t\tthis.intervalId = setInterval(() => this.updateNext(), 1000 / Consts.SIMULATION_RESOLUTION);\n\t}\n\n\tonHide(): void {\n\t\tclearInterval(this.intervalId);\n\t}\n\n\trender(ctx: Context2D) {\n\t\tlet creature = this.creatureClone;\n\n\t\tlet trans = TransformMatrix.translate(ctx.width() / 2, ctx.height() - 90);\n\t\ttrans = trans.mul(TransformMatrix.scale(0.5, 0.5));\n\t\ttrans = trans.mul(TransformMatrix.translate(-creature.center().x, 0));\n\n\t\tthis.camera.transform = trans;\n\n\t\tthis.populationTxt.text = \"Generation: \" + (this.mainView.population.generation + 1);\n\t\tthis.creatureTxt.text = \"Creature: \" + (this.creatureId + 1);\n\t\tthis.resultTxt.text = \"Result: \" + this.creatureClone.currentResult().toFixed(0);\n\n\t\tsuper.render(ctx);\n\t}\n\n\tshowCreature(id: number) {\n\t\tthis.scene.removeEntity(this.creatureClone);\n\t\tthis.creatureId = id;\n\t\tthis.ticks = 0;\n\t\tthis.creatureClone = this.mainView.population.population[this.creatureId].clone();\n\t\tthis.scene.addEntity(this.creatureClone);\n\t}\n\n\tnextCreature() {\n\t\t// if (++this.creatureId >= this.mainView.population.population.length) {\n\t\t// \tthis.mainView.population.eugenics();\n\t\t// \tthis.mainView.population.rate();\n\t\t// \tthis.creatureId = 0;\n\t\t// }\n\t\tthis.showCreature((this.creatureId+1) % this.mainView.population.population.length);\n\t}\n\n\tprevCreature() {\n\t\tlet total = this.mainView.population.population.length;\n\t\tthis.showCreature((total+this.creatureId-1) % total);\n\t}\n\n\tprivate updateNext() {\n\t\tfor (let i = 0; i < this.speed; i++) {\n\t\t\tif (this.ticks++ >= Consts.RUN_DURATION * Consts.SIMULATION_RESOLUTION) {\n\t\t\t\tthis.nextCreature();\n\t\t\t}\n\t\t\tthis.scene.update(1 / Consts.SIMULATION_RESOLUTION);\n\t\t}\n\t}\n\n\tskipGenerations(amount: number) {\n\t\tfor (let i = 0; i < amount; i++) {\n\t\t\tthis.mainView.population.eugenics();\n\t\t\tthis.mainView.population.rate();\n\t\t}\n\t\tthis.creatureId = -1;\n\t\tthis.nextCreature();\n\t}\n}\n","import { Renderable } from \"../Renderable\"\nimport { Context2D, EventType } from \"../Context2D\"\nimport Color from \"../../util/Color\"\nimport { Font } from \"../../util/Font\"\nimport * as GuiUtil from \"./Util\"\nimport Vec2 from \"../../util/Vec2\"\n\nexport default class Chart implements Renderable {\n\tconstructor(\n\t\t// public text: string,\n\t\t// public callback: () => void,\n\t\tpublic x: number,\n\t\tpublic y: number,\n\t\tpublic width: number = 200,\n\t\tpublic height: number = 200,\n\t\tpublic font: Font = new Font(\"Arial\", 25),\n\t\tpublic fill: Color = new Color(0xff, 0xff, 0xff),\n\t\tpublic stroke: Color = new Color(0x00, 0x00, 0x00),\n\t\tpublic fillOver: Color = new Color(0x3c, 0xa0, 0xe6),\n\t\tpublic strokeOver: Color = new Color(0x29, 0x80, 0xb9),\n\t\tpublic fillDown: Color = new Color(0x29, 0x80, 0xb9),\n\t\tpublic strokeDown: Color = new Color(0x34, 0x98, 0xdb),\n\t) { \n\t\tthis.addPoint(0,0);\n\t\t// this.addPoint(1,10);\n\t\t// this.addPoint(2,-20);\n\t\t// this.addPoint(3,30);\n\t\t// this.addPoint(4,50);\n\t}\n\n\tprivate over: boolean;\n\tprivate down: boolean;\n\n\tprivate minX: number = 0;\n\tprivate maxX: number = 1;\n\tprivate minY: number = -100;\n\tprivate maxY: number = 100;\n\n\tprivate points: Vec2[] = new Array<Vec2>();\n\n\taddPoint(x: number, y: number) {\n\t\tthis.minX = Math.min(this.minX, x);\n\t\tthis.maxX = Math.max(this.maxX, x + 10);\n\t\tthis.minY = Math.min(this.minY, y - 10);\n\t\tthis.maxY = Math.max(this.maxY, y + 100);\n\t\tthis.points.push(new Vec2(x,y));\n\t}\n\n\tgetRealPointCoords(x: number, y: number, bounds: Vec2): Vec2 {\n\t\t(y - this.maxY) * (bounds.y)/(this.maxY - this.minY)\n\t\treturn new Vec2(bounds.y - (x - this.maxX) * (bounds.x) / (this.minX - this.maxX), (y - this.maxY) * (bounds.y) / (this.minY - this.maxY));\n\t}\n\n\tdrawLine(ctx: Context2D, lhs: Vec2, rhs: Vec2, bounds: Vec2) {\n\t\tlet pointa: Vec2 = this.getRealPointCoords(lhs.x, lhs.y, bounds);\n\t\tlet pointb: Vec2 = this.getRealPointCoords(rhs.x, rhs.y, bounds);\n\t\tctx.drawLine(pointa.x, pointa.y, pointb.x, pointb.y, true, true);\n\t}\n\n\trender(ctx: Context2D) {\n\t\tctx.save();\n\n\t\tlet bounds = GuiUtil.alignTranslate(ctx, this.x, this.y, this.width, this.height);\n\t\tctx.fillColor(this.fill).strokeColor(this.stroke)\n\t\tctx.lineWidth(2);\n\t\tctx.drawRect(0, 0, bounds.x, bounds.y, true, true);\n\t\t\n\n\n\t\t//Draw X line\n\t\tctx.fillColor(new Color(0xff, 0x00, 0x00)).strokeColor(new Color(0xff, 0x00, 0x00))\n\t\tthis.drawLine(ctx, new Vec2(this.minX, 0), new Vec2(this.maxX, 0), bounds);\n\n\t\tctx.fillColor(new Color(0x00, 0x00, 0x00)).strokeColor(new Color(0x00, 0x00, 0x00))\n\t\tlet equation = (x: number) => x**(2);\n        for(let x = 1; x < this.points.length; x += 1) {\n\t        this.drawLine(ctx, this.points[x-1], this.points[x], bounds);\n        }\n\n\t\tctx.fillColor(Color.White).strokeColor(Color.Black).font(this.font);\n\n\t\tctx.restore();\n\t}\n}\n","import { Renderable, RenderGroup, RenderTransform } from \"../graphics/Renderable\"\nimport Button from \"../graphics/gui/Button\"\nimport Chart from \"../graphics/gui/Chart\"\nimport Text from \"../graphics/gui/Text\"\nimport { Context2D, EventType } from \"../graphics/Context2D\"\nimport TransformMatrix from \"../util/TransformMatrix\"\nimport { Font, FontWeight } from \"../util/Font\"\nimport Color from \"../util/Color\"\nimport { Scene } from \"../core/Scene\"\nimport { Air, Ground } from \"../core/Entity\"\nimport WebImage from \"../graphics/browser/WebImage\"\nimport { Creature } from \"../core/Creature\"\nimport { CreatureBone } from \"../core/Creature\"\nimport Population from \"../core/Population\"\nimport * as Consts from \"../core/Consts\"\nimport * as CoreUtil from \"../core/Util\"\nimport * as GuiUtil from \"../graphics/gui/Util\"\nimport Vec2 from \"../util/Vec2\"\nimport MainView from \"./MainView\"\nimport { View } from \"./View\"\n\nexport class PopulationView extends RenderGroup implements View {\n\tprivate loadBtn = new Button(\"Load\", () => this.load(), -569, -7, 87, 50);\n\tprivate saveBtn = new Button(\"Save\", () => this.save(), -475, -7, 87, 50);\n\tprivate skipPopulationBtn = new Button(\"Skip generation\", () => this.skipGenerations(1), -265, -7, 202, 50);\n\tprivate skip10PopulationsBtn = new Button(\"Skip 10 generations\", () => this.skipGenerations(10), -7, -7, 250, 50);\n\tprivate populationBox: PopulationBox;\n\n\tprivate bestOfChart = new Chart(40, -100);\n\n\tprivate populationTxt = new Text(\"\", 15, -30, \"middle\", new Font(\"Arial\", 30, \"normal\", FontWeight.Bold));\n\tprivate resultTxt = new Text(\"\", 290, -30, \"middle\", new Font(\"Arial\", 30, \"normal\", FontWeight.Bold));\n\n\tconstructor(public mainView: MainView) {\n\t\tsuper();\n\n\t\tthis.populationBox = new PopulationBox(mainView.population, 10, 10, -20, -100, 55,\n\t\t\t(target: number) => this.onCreatureClick(target));\n\t\tthis.bestOfChart.addPoint(this.mainView.population.generation + 1, this.bestCreature().resultWithoutPenalties);\n\n\t\tthis.items.push(this.populationBox);\n\t\tthis.items.push(this.populationTxt);\n\t\tthis.items.push(this.resultTxt);\n\t\tthis.items.push(this.bestOfChart);\n\t\t// this.items.push(this.loadBtn);\n\t\t// this.items.push(this.saveBtn);\n\t\tthis.items.push(this.skipPopulationBtn);\n\t\tthis.items.push(this.skip10PopulationsBtn);\n\t}\n\n\tonShow(): void {}\n\tonHide(): void {}\n\n\trender(ctx: Context2D) {\n\t\tthis.populationTxt.text = \"Generation: \" + (this.mainView.population.generation + 1);\n\t\tthis.resultTxt.text = \"Best result: \" + this.bestCreature().resultWithoutPenalties.toFixed(0);\n\t\tsuper.render(ctx);\n\t}\n\n\tbestCreature() {\n\t\treturn this.mainView.population.population[0];\n\t}\n\n\tskipGenerations(amount: number) {\n\t\tlet timer = \"skipGenerations(\" + amount + \")\";\n\t\tconsole.time(timer);\n\n\t\tfor (let i = 0; i < amount; i++) {\n\t\t\tthis.mainView.population.eugenics();\n\t\t\tthis.mainView.population.rate();\n\t\t\tthis.bestOfChart.addPoint(this.mainView.population.generation + 1, this.bestCreature().resultWithoutPenalties);\n\t\t}\n\n\t\tconsole.timeEnd(timer);\n\t}\n\n\tonCreatureClick(id: number) {\n\t\tthis.mainView.simulationView.showCreature(id);\n\t\tthis.mainView.show(this.mainView.simulationView);\n\t}\n\n\tload() {} // TODO\n\tsave() {}\n}\n\nexport class PopulationBox implements Renderable {\n\tconstructor(\n\t\tpublic population: Population,\n\t\tpublic x: number, public y: number,\n\t\tpublic width: number, public height: number,\n\t\tpublic elemSize: number,\n\t\tpublic callback?: (target: number)=>void\n\t) {}\n\n\tprivate creatureOver: Creature = null;\n\tprivate creatureClone: Creature = null;\n\tprivate scene: Scene = null;\n\n\trender(ctx: Context2D) {\n\t\tctx.save();\n\n\t\tlet bounds = GuiUtil.alignTranslate(ctx, this.x, this.y, this.width, this.height);\n\t\tfor (let i = 0; i < this.population.population.length; i++) {\n\t\t\tthis.renderCreaturePreview(ctx, bounds, i);\n\t\t}\n\n\t\tctx.restore();\n\t}\n\n\tprivate renderCreaturePreview(ctx: Context2D, bounds: Vec2, id: number) {\n\t\tconst boxSize = this.elemSize;\n\t\tconst boxGap = 4;\n\n\t\tlet creature = this.population.population[id];\n\n\t\tlet mouseOver = (creature == this.creatureOver);\n\t\tif (mouseOver) {\n\t\t\tthis.scene.update(1 / Consts.SIMULATION_RESOLUTION);\n\t\t\tthis.creatureClone.result = creature.result;\n\t\t\tcreature = this.creatureClone;\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Bind events\n\n\t\tif (this.callback) {\n\t\t\tctx.bindEvent(EventType.Click, () => this.callback(id));\n\t\t}\n\n\t\tctx.bindEvent(EventType.MouseEnter, () => {\n\t\t\tthis.creatureOver = creature;\n\t\t\tthis.creatureClone = creature.clone();\n\t\t\tthis.scene = CoreUtil.creatureScene(this.creatureClone);\n\t\t});\n\t\tctx.bindEvent(EventType.MouseLeave, () => {\n\t\t\tthis.creatureOver = this.creatureClone = this.scene = null;\n\t\t});\n\n\t\t// Calculate position and draw box\n\n\t\tlet columnCount = Math.floor((bounds.x-boxGap) / (boxSize+boxGap));\n\t\tlet column = id % columnCount;\n\t\tlet row = Math.floor(id / columnCount);\n\n\t\tlet offsetX = (bounds.x - (columnCount*(boxSize+boxGap) - boxGap)) / 2;\n\n\t\tlet x = (boxSize+boxGap) * column + offsetX;\n\t\tlet y = (boxSize+boxGap) * row;\n\n\t\tctx.translate(x, y).strokeColor(Color.Black).lineWidth(1);\n\t\tctx.fillColor(mouseOver ? new Color(206, 229, 253) : new Color(228, 241, 254));\n\t\tctx.drawRect(0, 0, boxSize, boxSize, true, true);\n\n\t\t// Draw rescaled creature\n\n\t\tlet creatureBounds = creature.extremes();\n\t\tlet scaleX = (boxSize-10) / (creatureBounds.max.x - creatureBounds.min.x);\n\t\tlet scaleY = (boxSize-22) / (creatureBounds.max.y - creatureBounds.min.y);\n\t\tlet scale = Math.min(scaleX, scaleY);\n\n\t\tlet avgX = (creatureBounds.min.x + creatureBounds.max.x) / 2;\n\t\tlet minY = creatureBounds.min.y;\n\n\t\tctx.save();\n\t\tctx.translate(boxSize/2, boxSize-15).scale(scale, -scale).translate(-avgX, -minY);\n\t\tcreature.render(ctx);\n\t\tctx.restore();\n\n\t\t// Draw fitness value\n\n\t\tlet fitness = creature.result.toFixed(0);\n\n\t\tctx.font(new Font(\"Arial\", 10));\n\t\tctx.fillColor(mouseOver ? new Color(70, 70, 70) : new Color(100, 100, 100));\n\t\tctx.drawRect(0, boxSize-11, boxSize, 11, true, false);\n\t\tctx.fillColor(Color.White).drawText(2, boxSize-5, fitness, \"middle\", true, false);\n\n\t\tctx.restore();\n\t}\n}\n","import { Renderable } from \"../graphics/Renderable\"\nimport { Context2D } from \"../graphics/Context2D\"\nimport Population from \"../core/Population\"\nimport * as Consts from \"../core/Consts\"\nimport { View } from \"./View\"\nimport SimulationView from \"./SimulationView\"\nimport { PopulationView } from \"./PopulationView\"\n\nexport default class MainView implements View {\n\n\tpopulation: Population = new Population(Consts.POPULATION_SIZE);\n\n\tpopulationView: PopulationView;\n\tsimulationView: SimulationView;\n\n\tcurrentView: View;\n\n\tconstructor() {\n\t\tthis.population.rate();\n\t\tthis.populationView = new PopulationView(this);\n\t\tthis.simulationView = new SimulationView(this);\n\t\tthis.currentView = this.populationView;\n\t}\n\n\trender(ctx: Context2D) {\n\t\tthis.currentView.render(ctx);\n\t}\n\n\tshow(view: View) {\n\t\tthis.currentView.onHide();\n\t\tthis.currentView = view;\n\t\tthis.currentView.onShow();\n\t}\n\n\tonShow(): void {\n\t\tthis.currentView.onShow();\n\t}\n\tonHide(): void {\n\t\tthis.currentView.onHide();\n\t}\n}\n","import { Scene } from \"../../core/Scene\"\nimport { Ground, Air } from \"../../core/Entity\"\nimport { Creature, CreatureBone, CreatureMuscle } from \"../../core/Creature\"\nimport { CanvasWindow, InteractiveCanvasWindow } from \"../../graphics/browser/CanvasWindow\"\nimport Renderer from \"../../graphics/Renderer\"\nimport { RenderTransform } from \"../../graphics/Renderable\"\nimport TransformMatrix from \"../../util/TransformMatrix\"\nimport Vec2 from \"../../util/Vec2\"\nimport Color from \"../../util/Color\"\nimport WebImage from \"../../graphics/browser/WebImage\"\nimport { InteractiveContext2D } from \"../../graphics/InteractiveContext2D\"\nimport MainView from \"../../ui/MainView\"\nimport * as CoreUtil from \"../../core/Util\"\n\nCoreUtil.setResources(new WebImage(\"sky.png\"), new WebImage(\"ground.jpg\"));\n\nexport let mainView = new MainView();\n\nexport let view = new InteractiveCanvasWindow(window, 1);\nexport let renderer = new Renderer(view.context, mainView, false);\n\nrenderer.start();\n"]}